%!PS-Adobe-3.0
%%Title: (SIGMETRICS.final)
%%Creator: (FrameMaker: PSPrinter 8.1.0.1)
%%CreationDate: (10:49 AM Saturday, March 12, 1994)
%%For: (dave)
%%Pages: 2
%%DocumentFonts: Helvetica-Bold Helvetica Helvetica-Oblique Times-Roman Times-Italic DeltaSymbol
%%DocumentNeededFonts: Helvetica-Bold Helvetica Helvetica-Oblique Times-Roman Times-Italic
%%DocumentSuppliedFonts: DeltaSymbol
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -8 -15 784 597
%ADO_ImageableArea: 0 0 776 582
%%EndComments
/md 143 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Cassette

%%EndFeature
}featurecleanup
(dave)setjob
/pT[1 0 0 -1 15 784]def/mT[1 0 0 -1 15 784]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Oblique
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Italic
fc
%%BeginFont: DeltaSymbol
%!PS-AdobeFont-1.0: DeltaSymbol 001.001
%%CreationDate: 7/9/91 12:00:32 PM 
%%VMusage: 1024 19176
 
% Generated by Metamorphosis Professional 2.01
% 
FontDirectory/DeltaSymbol known{/DeltaSymbol findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
12 dict begin
/FontInfo 9 dict dup begin
 /version (001.001) readonly def
 /FullName (DeltaSymbol) readonly def
 /FamilyName (DeltaSymbol) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -133 def
 /UnderlineThickness 20 def
 /Notice () readonly def
end readonly def
/FontName /DeltaSymbol def
/Encoding 256 array
dup 0/NUL put dup 1/Eth put dup 2/eth put dup 3/Lslash put
dup 4/lslash put dup 5/Scaron put dup 6/scaron put dup 7/Yacute put
dup 8/yacute put dup 9/HT put dup 10/LF put dup 11/Thorn put
dup 12/thorn put dup 13/CR put dup 14/Zcaron put dup 15/zcaron put
dup 16/DLE put dup 17/DC1 put dup 18/DC2 put dup 19/DC3 put
dup 20/DC4 put dup 21/onehalf put dup 22/onequarter put dup 23/onesuperior put
dup 24/threequarters put dup 25/threesuperior put dup 26/twosuperior put dup 27/brokenbar put
dup 28/minus put dup 29/multiply put dup 30/RS put dup 31/US put
dup 32/space put dup 33/exclam put dup 34/quotedbl put dup 35/numbersign put
dup 36/dollar put dup 37/percent put dup 38/ampersand put dup 39/quotesingle put
dup 40/parenleft put dup 41/parenright put dup 42/asterisk put dup 43/plus put
dup 44/comma put dup 45/hyphen put dup 46/period put dup 47/slash put
dup 48/zero put dup 49/one put dup 50/two put dup 51/three put
dup 52/four put dup 53/five put dup 54/six put dup 55/seven put
dup 56/eight put dup 57/nine put dup 58/colon put dup 59/semicolon put
dup 60/less put dup 61/equal put dup 62/greater put dup 63/question put
dup 64/at put dup 65/A put dup 66/B put dup 67/C put
dup 68/D put dup 69/E put dup 70/F put dup 71/G put
dup 72/H put dup 73/I put dup 74/J put dup 75/K put
dup 76/L put dup 77/M put dup 78/N put dup 79/O put
dup 80/P put dup 81/Q put dup 82/R put dup 83/S put
dup 84/T put dup 85/U put dup 86/V put dup 87/W put
dup 88/X put dup 89/Y put dup 90/Z put dup 91/bracketleft put
dup 92/backslash put dup 93/bracketright put dup 94/asciicircum put dup 95/underscore put
dup 96/grave put dup 97/a put dup 98/b put dup 99/c put
dup 100/d put dup 101/e put dup 102/f put dup 103/g put
dup 104/h put dup 105/i put dup 106/j put dup 107/k put
dup 108/l put dup 109/m put dup 110/n put dup 111/o put
dup 112/p put dup 113/q put dup 114/r put dup 115/s put
dup 116/t put dup 117/u put dup 118/v put dup 119/w put
dup 120/x put dup 121/y put dup 122/z put dup 123/braceleft put
dup 124/bar put dup 125/braceright put dup 126/asciitilde put dup 127/DEL put
dup 128/Adieresis put dup 129/Aring put dup 130/Ccedilla put dup 131/Eacute put
dup 132/Ntilde put dup 133/Odieresis put dup 134/Udieresis put dup 135/aacute put
dup 136/agrave put dup 137/acircumflex put dup 138/adieresis put dup 139/atilde put
dup 140/aring put dup 141/ccedilla put dup 142/eacute put dup 143/egrave put
dup 144/ecircumflex put dup 145/edieresis put dup 146/iacute put dup 147/igrave put
dup 148/icircumflex put dup 149/idieresis put dup 150/ntilde put dup 151/oacute put
dup 152/ograve put dup 153/ocircumflex put dup 154/odieresis put dup 155/otilde put
dup 156/uacute put dup 157/ugrave put dup 158/ucircumflex put dup 159/udieresis put
dup 160/dagger put dup 161/degree put dup 162/cent put dup 163/sterling put
dup 164/section put dup 165/bullet put dup 166/paragraph put dup 167/germandbls put
dup 168/registered put dup 169/copyright put dup 170/trademark put dup 171/acute put
dup 172/dieresis put dup 173/notequal put dup 174/AE put dup 175/Oslash put
dup 176/infinity put dup 177/plusminus put dup 178/lessequal put dup 179/greaterequal put
dup 180/yen put dup 181/mu put dup 182/partialdiff put dup 183/summation put
dup 184/product put dup 185/pi put dup 186/integral put dup 187/ordfeminine put
dup 188/ordmasculine put dup 189/Omega put dup 190/ae put dup 191/oslash put
dup 192/questiondown put dup 193/exclamdown put dup 194/logicalnot put dup 195/radical put
dup 196/florin put dup 197/approxequal put dup 198/Delta put dup 199/guillemotleft put
dup 200/guillemotright put dup 201/ellipsis put dup 202/nbspace put dup 203/Agrave put
dup 204/Atilde put dup 205/Otilde put dup 206/OE put dup 207/oe put
dup 208/endash put dup 209/emdash put dup 210/quotedblleft put dup 211/quotedblright put
dup 212/quoteleft put dup 213/quoteright put dup 214/divide put dup 215/lozenge put
dup 216/ydieresis put dup 217/Ydieresis put dup 218/fraction put dup 219/currency put
dup 220/guilsinglleft put dup 221/guilsinglright put dup 222/fi put dup 223/fl put
dup 224/daggerdbl put dup 225/periodcentered put dup 226/quotesinglbase put dup 227/quotedblbase put
dup 228/perthousand put dup 229/Acircumflex put dup 230/Ecircumflex put dup 231/Aacute put
dup 232/Edieresis put dup 233/Egrave put dup 234/Iacute put dup 235/Icircumflex put
dup 236/Idieresis put dup 237/Igrave put dup 238/Oacute put dup 239/Ocircumflex put
dup 240/apple put dup 241/Ograve put dup 242/Uacute put dup 243/Ucircumflex put
dup 244/Ugrave put dup 245/dotlessi put dup 246/circumflex put dup 247/tilde put
dup 248/macron put dup 249/breve put dup 250/dotaccent put dup 251/ring put
dup 252/cedilla put dup 253/hungarumlaut put dup 254/ogonek put dup 255/caron put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-544 -318 1036 1020}readonly def
currentdict end
currentfile eexec
ACFEE94A869EA4EDD97941172FA92FD7637EA65883D1DDBAB18556575A90F49E5153A55394ADDD780F25A483BFD5DB4B3AACEFA23DF788E31A589543F6FA112B06CF1BD4FA5F01DF0BD5ED064C5E65598354D38E549C256BCD2F0BC8C2BA0C10765DB9EC
D5D449997843FBD92CA1844ABB015D4F36D9458F092BE8E76B86ED87719E9637BBB205AB386D3EEA42CB98B9ED8759317C1C624D7348068F5EA93FD171CF6232C1D04E0E2CCFA828A85F1372C76DEEACE6D39C605C0D22769B282656CE6A21697D9B3C44
BCAB0F77000711901BE718F6ED8989E2F13736B0B83E966E480D3BF86D7E94F127FC34C0E5533383D34C0E15B86E71433CAFA2EDA6E25352C7F9BC696AF744359084BC3D8B1A691DF8BB7BD86CDC7342592E2DDB51578EBF3D8B532DDAE8742D96F76D4E
A3A9D5D8F0B493C69CA3325B623AC5E56BFD7F7EA5198E4D73417EB4526ACFCA9D49451573D5FF75CE1E5EB4B419CFC4F4112BCFA2CB9D321959689ABBD78D6CC8D33611378415AD5A25782A1EC801FFC6B864E638DE962B16E9F72E307267F553A88FD9
63D1308E81873CD0DC8A4F54B130EF8D6A6963EE9A217E608905A9BCF8ABEB5986A223088C1ED2CB51FF63D3B589B584030719A610AC8266B275CBD11A3419CAB2BFFC3A2D301EF962939B8A1306AFD61FD5A3CB79AC224F7742B065E2348C20C67A3E8A
CEFACF370BC6B21C2E9CF18F27DCAEFE7FC3EC892016F50249830FB5550BBCA6BF94C79F90D618F27F18D42CFEA83CDCE16F766E6475CA0B3AA99010928584B7BD93FED8AFEB4A9EF21A5DE6F230555ADB7B05D2FCB115DA8DBD96867844A8928CAE41D1
638FEEDAC0545F1CCF0201565EC180ECDC6D0CE1666ADBE8B95E6550877B2A240D96ED28B616C94398DE99DD2C4C7DB917B9EAC8F9F16EA5E518FE72BCE85FE638B83F7F33D5275839857102F554E9AE95907FC0485EFA64C3BE1F52734EC75DF68EC6E8
D3C6B3E4107E0996BB20572867C101B7E1C545305DE340603660589EF31110AC07547FC3967A74F21C2C3FB3426795D388D21AF1A9E0E76AC98192360FCF93E79FC74BC3BF88B096FD105DC40D65BD6FF3F588EAC67C99DA47F17BD06EA7D16DF1D70C51
CD08EC812E784095F4AFFD6DC38571E654BB2586EE6B44F1431EE7FED982A3357BE2D263D09E328077A669D03BA3F58F6A5EBD0E3ACA35140BCF9DB4C63DF746DAC1282FD3B1AD1E5E340C731CD704EBADB9212BC53074BE4F298E6F66A7C62600A08D69
F1E6BEDA14713A9B3104D0BD294DB743587C15E278965869EEF3B547B4A37ACCD310EDC575FAEEE059B8A507EC9445BA228C896F0D4FFE68F9E0FCDBEE1494BA4CE94BDB168DF9C12DDE7DDFCA6AF7CFD0DBE2C6CF4984508677CEC6546FAFBE87F5FF87
E39B7968176B6F01EFD6D1D9601C068C39168F2EE670169BF82051015D7DA3A8718E3BB1B116679249A4DECF1D64E530B650B941BD4127F3A13A761C12C9BBC46A1F6A6D33F64C1FD5C39590DCBCA493F89B52DF79A9CE480D1A0EB14093A06B6F4D42FF
2E3B5CDFA3E1784723648044D509B241A8E149D1CF02B5B56BEC1A286615A57B48CC786322CDF9884EA20851CF3083BC043AD3BB497AFA8FE9C7DD4CD38E9486E4F5881CD5E2DFFC310B9302111D0B732E23E71DD011C7D88F83BDD426CA2DF2B6413995
689F04143DB8E505283465AA4C3750EC6B57ADD2DAFCDCD08BD53D58CE543A5F83534D7B5553A8B42AD50B5003AFFC6B4D2959BC7F51082062194C1C482A0EA33FE6F8C0099E46E57EDC08EA93154287E14011268A439B52757757E3D0C45D13749D72A8
D39B97C23E01E97662493E4BC89B336133B849FACC56BB8FD103E98AC1CE98D6396E44A59D5F604F1DE1832D293616387057360958840D0652DA09E2CEE74F80FE41FA334F97F29668247C532861249222A7EBCA4E1F4247E043F4E70FB862606CD3474A
A1BB99BA23355A7876E8B8E20C8FB400B4D7941296A7D5DD8FC7A7C18972BBBC6BC50AE8D8874C25F44318D3B62340424B93AE252A603BA52F2D1D56366F81DBA68E3FE6F565553C74E1E8F167B49487BD24A600CCDE2A11D298B8D23C32E2F1156FD04B
A00F993E21BB5F414310F30C3B337A8F4D64CDFD25BF8BABAA4A994A512DF86A7B686753989F4B3940E40251C8C92DF9E1448AF49A046AEBCBFBFE743D32D5C7426EFCE6C8D93CD4915D3608571FED6CD8866056EFAB8FEA4712F726E570143203DAD9E0
91805078FF61D5B5F8E7B61247C07DBB321F3B458176C0C8CE56B94F67F49E1F8EB6AD0ABDC34466E541B397B5C48467CDB5F2206FB1B75576FDCCABFA712B3F051739DDA1E55E69BDEAD7C414EAF85FD3F4F7FCBAD1E2E46134C381DEBAA13B5EA14166
300D5F43916C95EBE08673CB3AF7D8C78E23841155ECAAF9CD412E006C36E9E6B193B787C97BBA59535E7BAC4CD37FFAED42C61E9EFDD1CB57B2372E50F0147DC6F31E75EE4A3C6D99AD7B684E264D05CA98CE9D65E243EEE40EB5973B8C30BBCB2655AE
35C59751111F64DFD0A45D9B407A93A1007C7DF724D68BC927679322EE014CE9B1B5D1C1E766A5DCE4EFC7243504AC5BC3F6CEB798745147E8F226351A0B6C7C0EF39B5A9AB18E41D853E9D2986338B182989803E344041016FE31E7560B7C95E82BB79B
5BB0CFB0D05C7871709F5BD26B0F846B4C1CA443248C78C15918056489D181629F2E8EA99A616B73272D2F111414A7229E0B0D4370B46BA60272B6D6AF1B048C6B187AEAEF619B48EE1960C77A61568125440098EBE59CDB4677C1F299D8AA675C949BF2
57837AF5197863DFE607E712195B262600ABC35C64B986ED8E95D5BE8EBDF5C1133B739D97A36BB9863DABFD50D21F88C02FE04D6B338C00D622B80B395A166BE8F9DBC2CEE2B0DA58EC018CCAF793CD2E12DD73B69CEFE95EA71B6F72ABDA3450ABE7C4
4ECD8D65D96FA47CB8A490955BA5A99D7A466ADCF58EDAF6978A82D9500AC46EDA5BD1237B6E1D966B4CFFBFDC7C6AF5859155E657AE21E395F1091628B1EC319B8DA8D2D3D56767BC68223C0C14C40CD99A48F62176304F077CDCE0F731393CFD924FFD
B49D8AE68A27E9E9D6C29C9314ED064F0581071BB4757700A848913E164384012A4C3BBE572D32139F3D4A81A7C80DE0B8468E204230ADD869AABD1E93E5DA9A6000941C80C46A7D24B4E84A4C0A1F1D65C4EE537A8753C95AAEDC28DF1F51F0595E6C28
57777FD927F2C71D57FD7C07771462090E723C922FFDC684985F6D8BC2A27B4C9020EB685FA432B86FCAAA6D48FB7ACE18C00FDC3125BAD260FF746387AEC23AB17A283430E10628BB2EEEB0C6F873F6FB059A389F34D3A3B7FE9016E814CD0739454C2B
36F35D6763CFE7DED7CF22E93283CCD424B0F5BC156C94652284827698F4107A2786E88A0250C06BB5F8D3963C04ED113CB7CAE35FAF289B706AB03F739EA7485A0C19B1E1C54645A14E8F6F8F7BA4815082DD36DC587F3C2B303D31595BC02C56BE8455
2A1305FD3B76A1EB4EDA5223E380700BDD0E436DE2881526630353A4BCD2C7B83DCCE96691F1C911ED041C50D9C0136BF5050D1FDA0F43A6D1A523AA1059FDA27B2E82E9D4A7076A9E4E83DFBAB40D1A9D257A56E0264301B5D3F31E87E20EB1EFC72601
7A19AC0BC4676E05E2D6E10904EFB0937AE489E36079DCC09182BE56563B0AF92743B501B292F49D1047A7845DDA91EF14CEC4977B1B83632F33FD85F358C795B37DCB376CCD986CF05367F3349387150BFEEB91FF7923F4028474A5C072EEF105A7709A
FF9E0726EAA3EA74229ED746F9991F11E86ADB506AB1AA60BA9DD3DD44F8EC35481E0B0B256B00D8AFEF6286E33DB547DC3E19307193896D205F024CD460BED5EECD7DAB77DB2D2499E46EF1BE7ECDBCDC6FB43248F145902BEF401A00218EC7B0675E58
791AD3FDE788B4CD798792238AE00818012F3C52DF2770546FB489EC61F88B26D4621BD1793901BE1C8CCCAC3ECCB6C937254F648FAB06266118EA54C68390D5F13564FCE0C4A322FDC0F6BEC3AF7DBA2AA93DB8CE1578706D58B868B4131776F396EC08
F0CC978D6AC83D2F7AF9B3C4E891FFA6C301636A07B2703C6313A845D92928FE1B17A23E60286F0A43B5E4E8EBE2CB46C0EEB141D24D703E18763DC17A0E092DC499DD643B5E6CCD6E08A4236DA6FA509A64CD7533B46E366FBBA1B36238E38FA7EB9E09
4FFBD675E00B2115B62B09A181AC8CEFBF10C8C63858A9035003D3093712AAACF08E59FFE6ADABBBB03B640A0024D6654A5F96AEFD4201577E553F6275C4392190ECE45CF5F179871E4141BE83882E49131E86F2E7DB98EAED4D91B3C7847FF61BB6E5C3
FBB95F0D21F319B8CECB605D22BA23112716383D7DB6AAF3E7777DBDFA9385A7204E7AEEADDD8C0F0FE8053823329371678410ED57AD816A5C64FCBADCEEB4A86B4786519AB21D1F9EF081C14AF337B5FDAE722460FE23FD6D5E807C4316C2C9A27CCD70
66949DB6BA72FDB11063A88C3F7A7AB7402ABEE5626E883EA7E5C4A8C41733BABC8F6FF20EEA6D2B18A6DD2609BC7DBB457474C14436CC74D71A48BCFECA66D24C204CE573454F27CFC9911403C60C20718C53CEE3026997395DEEB93016C3D98A81B062
367D4677900AED691023A58E9F998C6C9D60A56FB601B1F907E8366565B02B8AC85522391D93759424D7B98C394BE4526EF5232AFAF8C0B73AF16C4F8C9BE3DF3F9153B53E30DCE0607F60ACDF82E1C6FB13EA7F0EDDF7AA4B4CEF259943C76FD4A526B8
23CA5D936D628066767C82F1FCD65411F2827963C7868F6AF8EA7DF55C1ADBB9351B2208A4C358B66AA3E1D983B04E6ED8A81BB4D6E77035FDFF588805144C46AE895C1D9B1722CE7D7438DD8B9384FE070267C7320FFCD7DDF3CCA5CBF7F225FAB6D17E
FC5D5211C6977D2A5B597E136EB0A38266725C5699878418979AF644ED39FDCB5D10B40675B998EB0AEDF2819A4990ED44862718A01C730DA20704F3E3540FF5EC0EC06C9CAAB264B407B85C8E244FAC057F5A89408BA2BE1DAF32815D598184A6F1C7AC
950E4835034EEF514D377E1C591CE411D248C583A0C4B8161CD48D05EF89BBB48048185257710FE3925D5C36A3453BFEC88AC122B1A28B23AAE69EAC24DD2630E3FA4D8325C3B3E2B5B1CAF0FCCC4CC55B8134F666696639AF818E520786F17CEE64EE35
A4770FED84744504230EC9904765CA284A118634BF22D80ED846FC949829A89A73AAF69BA6B77C5F7DE2CCF9DA5CEF4FA2E0991282D09A1A2C97FC10665D1B5B84637C2E114A0BEA83CF9866BBB058ADB5F71181FB1FA80C8E02B6DEE1591810FACFBFDE
0716E2F6CF27BA3E0EC69861356DDBDE2A69ADE0C440001C3D9DE24F06D1DB5138D1F5B6E66EF2BAF25C572782306C647A29EF683597EA3F8F9F2C95CED944E3823D086C77A20B256C2FE4DFC0961AFD1F22797343F4D990D5BFBB500D848141691B76BE
CECCAC95D9CB92DF5FF009EC2A951ADBC313E6CB618AFFDD03B028A4840435DE0103348F77AEB0E253E0316026C73BF7B59409483DEB4DDF1F4EC30E49A3B589FDDECE7F50828D12AEFFB7D2876C8DF673387903731E7299C4AED426BF7C6959D8101745
C941D59C317E4C6DBA6F9E1F4A86C4E16587DCFDA4AD0F04DBE2835B0896A5546DE59BEDCA361EEBB4D4BA573D823C4F1D2764CF5D9E2A947E604FA68FE02EEB8E2ABEC991677122CB8B61B991C4543D72EDA000ADFE994112C2FFB6C14EF19345B465D5
393883474AA1152B1382F61218FDFD8B1A043BF189C5126B1E4FBE004E4A1014AF5687CCF556DB0590167C74EB89A0A04C99D78CD80E26DB8A98B2A5043E00193F6F0D397E4C0992CF233F33A7E975C41561DE4AFF9FA93A8939FC88D5E2048C30356903
6F4FEECC83C52A91520363045BF9263C78F919A0C7CDF6274A2A5798722AD344A79E18D966006CFE001BC2734D034F07B2ECBFC254B0971034F58BC52345C622C39ECE536A106F6A6C3D0A7ACFED363267A32AFDED396B3E2B7D02734134B8C23B892A8B
0E6B7A96E897DBC18F3FF469650EC6AE6566D6F46F30FF4E77AEEAA749052A547E9ECE82B2E629C82BA67BEC617F4CDBFB8533E92834A3C9558CE2FE41CC9B28F73812B16694EC2AFFC77C1E3E610A83BCC8FB02850006FAE8F5F799CA99F250DE940A85
16A2D1120190F9477548B930748AF4DE6E38A8A4BCFD3774F63AA2D0157CD3933EA1A3AE5774C01067EFF2018C8C120E8DB199C45151418D33A11FAA43259E4CB0C0C9A501600FCA56AE4DDB202E1D733130F25E7FC8084D55D3C476F36E8BD8625BD1F7
2B5240BAE8B3FD8BB988B21AEC1353E083DA032950C1B2D5FE8CEB09E279B0468D078CA9D8B034F2F5DADE75158C0232EB2DBD1FC86D1973F52001C1F043A73020838BF55320D7A6FC061277680E7CBC980F90B13DA12FD7CDA03BEFEF5AF5F4F002830F
ADEC4EEEBCE2169DBC8DAC19236002BF915C3692BD49FE73347E03AEB137226C65CAD58C7A179210840FA82FCB7C0BD350F757870B5B6FD184B5288B8F5577503B6655484FA4FBCF4D06554AB543975408DD9D7C6AE9CE5B424ADE33A6252F8A4C1E1927
4F3857C2D5E6C849007311ED035FA6F70F5F63D8D8162297CC18E4C8FE3D8F64A230B0B0C6FBC39E1551C31FC307D4BBF60EE5C2D544CE3C59801A33DEE193C833E50F0674A4BFD48691DF7EF0C2FD0395C710037E1CA09C7E4CAB36D7BAA9186AA351CE
CD4492395B15D9E85750BD8CE2C21D065EC82C0E60C60BA31614D876FE387AAE8D353DC40570F14621AB2736D45A30A2281D7D259AE4F943EACC3CAB01A77A9D20CCB02770E0293E3D530B8971686F0CF35AA53E2221A0060808EAF3BA9C72B0DC08CF67
30925022918D2BCC6CAA6DC609249F6370A3C9D4011FDDC71DC5E6BD8DD337972136FBA92EA9145D01D99EC15E063F74A714C3164024735EDD1F7C09B00563F946EBE5F5442A02A1CECFFC5C61B07E9345E882D8C93C62C8D15DEF649E56A0394BEB0AAF
BFD7F6B06BFA8BE37AC1416639D0697ABCE3914D6DC78A6CBA18E73007CBE6865DDDBBF80197F822E4D295DFFE3C5F3AE300ABC3E750F589D6A6147B21D27F65D241106EA1EA1F4D8ECF3C30D4814838095E1C8D7E242DBD3DB1E8688658DD3F7BCADC6F
97362FE6C3EC940642A4B0E3D0979ACD698C1FF6DC9A26128A854E8E5344C2BE987A6509354F443A1784F32858B272E738172C9434082103724477C6689AD082E6C288CE3F0B3D70CF2193106C297F1AC530BA1A1B0EA807138F359E54842FE278FA792B
2D2D5D855B3823FD7AA56FB864B091C3C93623010FFA74A29AF4C9C156EC18C234C4B4D54D55AD8CDA67A92B67415916CDA9A11AB9E471DFBF48C81730AE6D5AF69779552352C871E148FD00302EB84D1245844C6BFFABD46A4A5BC1C49657D42C8B38F1
91486AFCD5BB75F29E5067AC28BD626668B2A5F90CFEFBBFAB0F0AF3D9C5F830A21ADCDEAB28FFAA6A9367B9BDEDC8C4E88B8BAC88328528868B076B11A2512FCEDD5064E2541768E80AAAEF48FC65565B3F0C51F9E18D2A7E3B1984FB0272204A137622
3306DCCF693077D60AA3A08178874B8109AB4CD6D6E0B45216288EC9A46E1F57BEAE8C999E7ED3716D26524C1765A82911F8FD27947B2DA3B597E79D914D0FBA5FCC5B041AB0A024989AA4A0E2C29A0AEC4C6289183D44EDCF5B29A9989363BA00C3ABCC
04326509766084815B5692729CE46D01ED30E0AB19BD02E0CDB297762F42AE3DDB28E72DEC1F765B1BA0E1503CA4576A56CD47068D4C78F44C4D87D847F1112A83BECDF9FA5FA83C3ED3A332386E3CEFFB4678411A095CEB6D06A9A089B336233C0E416E
1F5B835113B4124AA3961ACC63ECB7BD983A69EAA5FD61FE8B29226C67BB4CD6A396ECE1B749371A65F8EA920DAA7132442ABC539690BC942A54F1881E381367E88664D32C7176F4E9E3CE767EC0F82A54C3194A5888268A834D1D1478A9B00B291DA925
C4D2BCAC8313EB44972D3900F946E17E5D2F484E14390A7CDC662BBAAA04A0CF3332B252110458F80E0702FFBDA0A64F3A32D505E988D77C93027ED5C8AE7AF18FD9057D4547F948E52E75D999197D72E809B023543C7DAC9FB49122F9D47EFE3D42357A
729321183B95273E47809DB3C2491FF0F166B9774049460CD7F0E85309CF36BA9BF200F159DB59B093FDC1FF6748BB5FC5C28C310FE2311A35574876514650EEFFE824FD49894BD82361EEEEFDB5FF22F11EC58C15B3C3E325877767B7B71BE9EAEE9FA0
F85E1FD732E5A5F905C78CD61EBEF8F67AAB2D5F89FD65D29A768459D25DA7B7754AE64A08A3994F39EE4227CDF6002D70F840491F686DA50C1D04DF8D2809C98CE8122256922069832BFCB947F77FE559E26336E5C64B7ACE56727771D589554394D6A3
373F04DAEC4C4515E1AE2F5D7F5C54878B2041B6BEE50795D77317AE3C2C4F7CD65FF915885A98695616FA9F287481809D92A63B154359AA3822496A7AEBAC9DAF82109A6CA6B8FD7173E0B8B989D4133E2FB91BAA705BD6DFEB0278924D800159502CF3
5ED52E2626B12C51F5AA4CCFB7C509472007B4B330ABDAD390F2C7696A68841B89D050E68A355F7DF7DD8746F93DCB65513873F1A9D087E495D51606FB82B984BD25DBABD2C2626EE016A2C4CCD8658DBE64D08FEAEF3EE1663CDE046E7802338F379104
AAF8237ECD05FE85B1D16D6BE46E7E217D2ECF6CB2E1914E372497D67C29FD4300D06EA7A989DD2389D7979F1C41A7B9AD33104462617CD50326A325A7C2F948F3029F9A942479844F033F2E9DA90E3904202EE2F65B35450CA716A0A19E47EC67E90CBD
9B782E906067C1DD5B2EA0C7CDB3808C149D6438CC0F89EDBC9396051F827FA0BF7CC8E49D9814F46963433A80015EE56C4939A5ED9E9B74AD154B11991CEB15DA897FBA68ABA14C735F334CFAF41331D11EC298E55CE092794C805235A6C1B5348C133B
DF09782B2D8427BF595DF802C690FA2E0929A6E9D2B3D356F97505A77E9E0A5CB37A8337FEC191A1BF15B97437EB1BE4565F55B7F2D5BA32BB7238D9905D7A02D9D72744AD2B24A83151399B1FFCBBDBB3EF8542539A71AE2CB0805882B52D3C5F1D528D
A55E89F8605DD1DF290CC4E1607D76E807F2BF0BCB5B8B302C11D10DB1103F0FAB778EBB51A30358EED1DDBC67931A59F2BDECED809FCD4B1E31B3BF027610DEB85CA81D0EB37E30DCC0D9BB123800B60CC0C2AFC72153C0C801370FAD6A4838A0AF466F
5EEF4E1275575DD510AEBFBEAE18A68AC1193A14FC0501B22A3FE8D0C362BC8926F96DD8A1F8E9292DF1A7F6265C5A4DC55330E858A1C154C360987C999AA90E8C4B4AB4030BBB189E0C32F061B880F9B2B8776055ACFD4F505025EB647275819E602EC5
0FA0A2D00FEAD402CFCB0DE2B501BD4F03E82FC99C64FF86A9586637893E7C15C9C1855C7C83CE62D23812111C45759EA05BD4401285779A8FE1B629D73037FB7EB5647D9BCB2D962930D32B49A50B8B9D56ADEE8D28EFC683821149C4F3A5B281B360E8
3EE970BE33EA089B5B2A9FD09998DC76BB4210D37984B5809DC1FBBFE86E916A1BB2F25EA15E9C1DC35173A2E45881A6CD8AFC989C37CD18228D3C93D034EB85A4E4549660EE05DF08FF707277324A010D4A59F5871C6445991A45559C59E97CBD19BF24
D742309998E0ADDD1718C2C4A95DEEDB8143CEB2F291D175950777C35BC7D7E2C5A857009FCED4B1E071F235E6FE1BA7D141A016C09E7D18B6F95E38E2933554E6B07714A8A22EDE37452497B09B0E87B0DDD584595D4BFC3C40B3D3CD2FCE290580C76E
26ECC9DD83BF92563EB1E3D1A427BEFE50E74349446541D39CFFE57E4DD876728D6A4D038F52883C16D0F707DBC8A6901A775A6C6E68CE45F6EFBA8490693B36F70C913B91CC6693FC160855CE5B31400377883CA05BEC63D850A9769FBB5C8E77D17873
6C75C430B999642464F4CACFEC4316D12C1447DC2863E00007E09258B66290AECF9FFDCCF1A5FE41DB6653F219621C33AA4A22D4AD093766EAC4EA8DF76AB21B5C937473B4126AC027394EAD6BEB6ED4FB2D4F91361EBD9C02A96BF399C2E316C1EF4507
72A9B7D0C879B4BEC7802BCA01B4A9E6B63FBF8687E1E22FDEA5C02E81EA93D318EB59E29EE149645BCB457448A8FFEB733A9F9EAB94DF844B8AC7E218ACCD3EEAA99E28C302DFD30C90750D26E905C5181D005F486AE74DE73A08B26540B016B64B5EE8
C9E6AD1E670F1096BF044D3A3477AE4D0FFEC1C29F8BDC42B4A9F6CAB5E9F8218D61A40E1FBEF6186733F42161F62AA37CE585C65D8F7D9FC60D0AC7B8D5B86E543677DF5FFDC15CDF366ABCB9E358340ED33B8AC0A6C9D716014F332840141C399A7F69
A40611C3A3D650B218E9CBD2071C84FBE2A2C58C44FDC9FC5AAFCD74E442A082636747CCE2E7FE8DAF7F8DF9B95DB59E82B550AEE1944DA676B19B318FD056A8605A952D2EA2E5E1EF615E56E4E0199B0E71C6FED45C6A0EC5EB252B50E4AF1E3BFB9D7C
B13080DAEDCC69F1234B9DDD48DECB72C66A269E64EBB3D2CEA8B5AD8B452A2B2948467946A4C54509E1ABC69D42DF335904DC7BE5A7252DDE606B256DC43FDD7718FFE3D488541310D1FA4A9CF4E3B831E763F49A220076EEE2AFD38C33074FE102F529
67E98DD655E97E61A0931A65666C190BF9FDF24CD0BC1296F952737D93E72186115F928EB39A3E2BAFF24032DD7F983EFC0CB1A7F08ED3D6242EFA1B60779B999C953E8A710E2F95732C4A2FEA4E03DED90FE917CB31117AAD65E7411FAC430288DCF305
4955B5EA377F39B0D2D0A0D880042048A4A8A34CD2AC123872562419C2C67F9709ED53B8EFC51A755028735D3B1EDA54C88099728113A940C4D5D01DBEC24876F7D3CBDFDEF90DC5E99F0D18646F1D97F251AC70E3A541A6537A7A36E32C567F35A0ABA9
F0A610E6DFB109E13C4A1A98138B0EED49733755A0D7EED6D1775BA4F1A91C4A7C9E859FA3587373977685572876DDEF45DC6E14BBE99FFC5B1AB3BE7EF8BB8EBBA787913D8BFDD2064C7C96A11BCEDF9D2E13B361E3934AA19F0EA9D2B0E32D07FF5173
B94091189447D9A1FEB1E3667CE763DB05F2ADCD78CEB47F7C5DB00FABD4E97D2124377F8E34F41154F26EA6B7ACE98D0412ED99B1220C0A007A6687787EC147F4158CA229C48881316EB9AFB32E898C17D2ADEEF32FCBDE1FE480305922095F11419540
513FC1B028F2A20C928377E123ED9425ED05DC12AFF7507220DAD1E98F5C2928DCB064BB5E946ED8377657D6795A70EE490E0A7A606E464A273D4C8B3077D9E4DCEFAB0C1DFF744AE531826659FB795474311B32300A1B14357E6FF7256E3E71330798EC
9346A7FEE03E2AE6E002E19B76F577333906C32C1A9F78424A075C99906DD147A4124E3BC0718F1B6D6F773AC144ED9ACEE08AD9210DF3CF0894C085E4F2A8967F79B32BE00F21A803B988E89B273EE686A4CDE0D8B728AF00288EF56282D94A354913CC
B3278EE443D7620C948CF3DFE372340D4103AE7445B8977E2F336F1BF89E99B6695D027F36448C0907C1816B9B9D78A85010C7F61E9176F91FAD7E2C44729D5C8472AE1601D41BF8A1DAE6DBFA8A112A13A779701AC9595B2CAC80F705E4CAC6F00D9A95
C1557327F98D22C9DF1FC12AD61A862686388E3819F5DF350A36EA19FDA6DCC4343F326120E60B05B1FE3A41393E524BCA87C4AB3F6907524243C5D63C12A19E047630F79CBD2FCCBC9A3CC52250FF9336A7CE092007945282625A1D3904CE86FC4A612D
3CE07A3FDA79644A2EC3EE1C79B7E733420357D9A65742E95B85D038DF54701E84BE8C4E2FAAA239240F6F09A0828AA1A78F52A17F08DCEC160608BDF5028D6095729C8D94B74A4B8F79C072AA95ED5E75B66237392E08D77FC4F4C648AC1C005CF5085D
94ECFFA41BF39EC64A4350610E6DBDD2DA151934FBA93F4080093A3BEEEA2EB1FF53943368A9AE9EFCD658AE06D53A57FF9B8C8C24F3D0B510606716FCD27442F7B78D3C620B5DD52E13FC68EAC2B069EC1252298986AC70561ED63E94D6B92D196F5BA6
A336B1B9DA76853C45FA26478AE2D7D2F81D29122ABEF89BF816F4DC4B8D590CE69EB308123E0F74F6607EEF23DBFE083521C48C1CE758CEA79DD43096EC1C711F25E4008A0F0F67A2BDE67FCC491B51B2993659BD1D14B945E709F0BF1E0BAD8EB8C82C
C95F39FE8BA6AF8DF896E3DD35017BDA57849A8C61452589E936E1DED4016328766C4A340F1024902C4D77FAC3DA7B49BF825ED5834DEFCE170DFDDF35BA0613D6D6A5EB3B8607D97B461E728A90AB143D7F938A39AA555AAE8B56AA4C306A54B38B2C79
FDCD3EB69425D10374FA75266C1C542247C9D4D77F8DA8CD1C4736D9442D313F21EDAA9F60A4F54F9BD32B1F6812794A2E8E3D7951FC565E4403160D7004D2CA15C33258DB312FDE4568ADB63106DA02B08C3B9E64777612D19459031E734C1C30A9B0FB
1EE9DED3BC5582B076EB00B4AC446EF2D3EF4188A429766F688A95494BC99BB6BE1A59203DB37858DE56910CAAB3F4CFF0E8A04FBE5DB5F2BD9D008B0E69E08F9479048DDE0685AA17840DD20D8119C09E09356D20E4D7DD5E76905B21CC0C8F57893B03
DCFEDC5B2712EF37A2195F82E3F157E8073D85A9E4971F54C2011F4E726157E59BB326FD88ACC2849B8A7FFE644CB1F9BB5305BD09820B2458C75011F13E47F42FE0C4CADBE4857ACFE7BCE894AA3E72D331C1C913D4620D60335C6612E3737C20C84195
D9AEE54E875EAB9EC16D839E73B43ACFBC387F429321A80298BF23350B923362CBDE302F3BA6522348DE56D54F94CF86E04A9493527AA11634A0E6B466A139286E3646AE48DBEDF4BE95532D11EEED8E1B539AD075FEBD5DD24168CA1BBB522B18F5A8C9
85847644EDEC8898C78178D2213C5DB4AF32CA13AB4EB6FB0458D65E6194D2F5F6695479F3ABBD139A7F002A2D075A9020B6E7F78EAB19D155E212DD00F6382812B9364CBFDB6323F581DECEF0FC74B262E35F9F1EBE9D3E6AB04F5D3B67BFBB26678AFC
716EA977549CD376D736BB36256D4622C9151D7407C79A972C58059E1646331B78341A2E89B18882D6F0232BB9AB370F2CE32C60EB1E007732D5433DF5AC3054CC2A8305572FE2AF6656331B5F1E1C124BDAE0CCDF956D3259F4A0F19CD4817196BFE888
AB869DDD7E614B042A43881AB60733DE5F66E164D8106D536FCA331F04F0991109A1A3C668B51A03E88FAC28C485D1E63613C2D9B807C69B079E062B17724F7DE8B6025C58175C439A8642FBC07E66ACF9C126CBD363E133EA97B89A43424794A8EAD05D
8D131966B70240A34432DE65D8720E61E2D325B34CD60614059D870151FE140D2EB57308D026B2BEDCDFF40B7C6C485ED1C13389EF5C98FD44A36CF792DC4EF632F31C23B0B556BBE7F454AF152DE9B914C070C21302ED100AAAA890788B560D28F7F01F
2233F92EE8BF75F6CD9A3E31BDC4307ED4848CBF8070D69B7A9DBD8157CA3139978ED787E82BDAFB20430DD8990A1D7A5DC0D4F8DE3D0A4CB5A12ED305D06F920F449FE70848498CCF9936067F06E6045A131ED8EE86AC4C85A578F020C323F8D3E3D760
73CC2A224DA034DF4FEE3AB3AD4AE071ECA4A8A72EF8FDD87D59715BFEA1BAC203CFC6F8F0F519E72D79320AEAB62C40E7F7F57BD38C01D143671DE8B999DCAEFC70EA96ABDC8F111D30E39BD45A6E598FBCE7779D74C35525CFA2D1C57D88831D494F71
92932B304E0792B51E683138D2B699336F68C30388D16140FCC620C8B93F3CCDF6BCE47E0B6711AA7594DE966E2A2C065629568DC55F06800CCA44860C3CDE128A14A4E62EEC218669722C59F0A9422B7B4F45D54378A6526DFE7BB37F59379411249535
05DFE13E4C668089B71462E307D5225207062C56522F226062D0BF3D6521C591CC553996C21F836BA656E7F41C50BB95323A5FB89091929AD5C6E4D966D81E402BE55D58FC301EBA5541A659829B366F544E5A99C6BD9DF08E79DFD6B40462F3C8DE1461
406AFDB18A49328032B69411D620ACE9A71A0DDC1AB90A1A164AC17B5230F412D6452B6127E7AC3E990F1045BCAB07DDA0C9BA83115080558030961A42F8490E2A0A8DBB005A1CB62D0E0159175FB4B59B19454E8EA057F217E5865FB0093ACB1E275179
1F8E28A4EEDB8C26C9D46815B38C646D4C6E5D2B8377171126E413511877438F470E0E416037C370F76F2D95B0EB42C4EE331EB6CF44E8CF70D7BC186B6628BA9643E5A5CA5AC478FD9D0504C49430F2776D55D6C72CA57F8C49125C290082175245EA91
873C7ED96E4CFB476D20EEDF97AE6A2C51E80BB6773BAD0F1F3A0B1B2AF75565217F51097981BB6A3BD96E7251BB8D3A74937D6B9326FB7E69E4112E3AD8E2352EE10C393FC632127BD0D39D78F6FEE2AC9A0239E3CF76FEEF15DD43328C05A5F75CB922
D79973A974B8FDBF7C596E56B94E0AA60B8AD15DFAE2E632704D4192FD7A59305D87EF6A13B30BDC1F6F12704E01B3A777EC3047692391F54A944206C74852C2C2DA86569AC2101895220DFAD91D28B6ED17128E6BC2507F9093BE31A44F93CC8EE6C2CF
2B3365A9C61B9774653D9A621400CACEA31154D18A6590AA8AE3958FF8DC561DCD17BC5F4CCB30175DFEFF2000E6818E562E8554DFA1A589ECAD10D2802CF5B3F2A4B85F43FBDC0ACAD3E6BAF040E48FAEA34288E00666A6FE80438DEC9ED05AF19944AD
64DF43810D2303236530D449D133065050D1B7CFAFE7613E85891F1C227D2B9E72ED096E72DFB0E0F520A16F1721A21EC3B64B761EA09BFCA2239A92E6001EE0E47867BB1980FB8CAAEEE56243E3E57F33EEDC174ED5152AB08105DABFC807940C86F454
D4AFC739DE68D063CCAF94A1428D6280FAD1C6D71BE5A17CD4364BD08178E6F4FC527D0726E769A7B2803EAF746997AAB065700E7FFCD177CD31341546CCC4D98663B26712F94B21DC5A410CFB8A3DCC18C2DC5FD6AA9BFEE67BC871B59BEF35F9E73696
4F20CCBABEFC10AF22B6C6480C331CAA282EB36D0E072210447FE942082130228BC49A944DF4BE3E1AA923D854B0518963E30BAFB6ED30D238D121AD7FAF74E4793A5CD2AB4B4BD56695C5406E53C8CF4E7655E25071222E98D43FB482F1F5CA1B1D4AB1
F153694FB3EBACB8F1F1EA4E4D85CF1FF89EFABCCE4A70A9B1B40032FDC655A54FBDFE2ACD8B8CBBB932D51D3AB98FDE9B5AB4375437E9ED4A566395CCB6F65AA50BBFE5CE54D513AE127C566CD621714D30B689965A06B209E7024CCA07C964929766C0
4FF0C45ECF3A70D9B5F02D3CBEFE6EF6791864CE42C4A943E8CE07BC2E9EE5CA9AE2C59FB56BF04A983D3419CAEBCF60B36B82E44271697C7F52BDF93196E6BE99D483307FFCDF8BB67E448450A4DDE5B8D5C6AAA524D45159FC0DA6ED4B2D97D7318826
38F898E9CFCFEF8953BDA4115F118F146F6FAB12B661300FC311D7E78818E5FEB5333F06C63A257B998471B5DDAB0CBC67BC8A846EB891FDFE8899A467E3D7BC788E503A091163AE522F79D915AC1D331741E3772CFB10FBE814FF31F37F6513B7B4A797
78B72D3BEFAE23F2958CAC16833126E3550649946002103BAA59EB5B9A3FF980A2BF960C545A2076CA69CBA6AC11327C790DDA6EABDE33B6C6480C331CAA282A8FAEFABC7F22D39FBCBBF4708D8B388ACB1088E4042879F81EDA533BB207B825F6849FAC
3CE57B0CA0FFF279E3D2594370B68CE5D9DF3ED633DAA5353BA891517F16DBB6446FB718BB6B0D5E8C2CA597568741AED1DA2FF3971DD95EAE2D7D998D69ECB865C6E8A0484FE850746A719870B36E5A01206E67E4EC065618EE695CEEAF8B14C90EFACD
DF843AEEEC5525FDFA8D54E0BFBF92FE8EB90CB258B05DA5C6D5D3F58766C3F85DAAAB3DACC4E567E214D66E36B66E1CEFBE153974EF3E7BAAF32F73799AF90B4B604B65D5DDF066E346A48A49EADB288B232C6D6940A76B2BECF92782873DECEBF9BE9D
32F51AFC8696E89F827814D5302D7D1E57BA99CE983E5F0F759CDFF11DE263F13034020864ED214DBF95EA85894CBF4678D0EE3EE4183D999191198758D4117CD0AD288DF1C0D5DDB565FAF110ADA6E2EF0B0B7A46CC3172164DA8ED197FCA51DEAD3491
657B00902ED59345527A0730D2ADE22EA529F46F05144EDB58862D91F446C156C1C2843356A2E64112E6AB85F0C07786AC879FF07E9A48A73EF16FDB1A837EF69FAED54A31EFD1B8A80D6D5586868AB8D8F47671C79BF6BC4172940E263713961AF986AA
9C4EF09DAA58086C230EEDA9895BF4DA412055261E804C0F2B990FC06C1A2C98139EAD5720F51EBA271021348216824E451DE18A14F9FDF64B582200FFA0D8E66E9FFA6C67501EA8A9134575718AA9CA8F90C93D4FC94936C0C949A4C0918FFF9F5AC666
3EF69195DA2102311F1C68077E1FE8D5FEB9D359D1E154C50987BC05A3626D6003553644C4071A3611547E0F8C2C1465645BFA6797847DE4BABD48D9DAB6D2AD6447BCD601D2C57146221C03B121884938072742CFD3B4DFE02ECB25C2629A952CCA178F
E5EF8CD761172B32A2701567D9411E8F940C29784A5DB5C81F274C50FD586C6D05AC5408D8210887C0ACB01C81F98382C9B1CE2AE36470D0225B95AC017689C9B09F9068537AD3B4C7D3AE2A8AF049622425FF27228C65AC4A45AC14FA776F71A2E9B4AD
F118813FA24130A58A2345183A36B1AA0331811327E955AFDC54D602AB16155BED9F82E5B4CA22AAB525CC92C4F4697B84BEF41A3F36A606247E22D5878EFDF5A0AE6B0FB05C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark{restore}if
%%EndFont
/f0_1/Helvetica-Bold :mre
/f0_18 f0_1 18 scf
/f0_9 f0_1 9 scf
/f0_8 f0_1 8 scf
/f1_1/Helvetica :mre
/f1_12 f1_1 12 scf
/f1_7 f1_1 7 scf
/f2_1/Helvetica-Oblique :mre
/f2_7 f2_1 7 scf
/f3_1/Times-Roman :mre
/f3_10 f3_1 10 scf
/f3_8 f3_1 8 scf
/f4_1/Times-Italic :mre
/f4_10 f4_1 10 scf
/f5_1/DeltaSymbol findfont :ff def /f5_12 f5_1 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 4.0
% Copyright (c) 1986-93 Frame Technology Corp.  All rights reserved.
%%BeginProcSet: "FrameMacDict" 41 16
userdict/FrameMacDict 200 dict put FrameMacDict begin systemdict/setpacking
known{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fM5/fM6
/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMFl/fMGC/fMGL/fMGM/fMIx
/fMJB/fMJC/fMJG/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMOx/fMPC/fMPH
/fMPt/fMRC/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMat/fMa2/fMi/fMk/fms/bstring/dpi/freq
/sangle/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/onbits/offbits]{0 def}
forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl fML1{
/colorimage where{pop/currentcolorscreen where{pop true}{false}ifelse}{false}
ifelse}{true}ifelse def/FmBD{bind def}bind def/T true def/F false def userdict
/fMSuccessfull F put userdict/fM7 known not{userdict/fM7 0 put}if/fmXD{exch def
}FmBD/FmG{gsave}FmBD/FmR{grestore}FmBD/fMat matrix def/fMa2 matrix def/fmSM{
fMat currentmatrix pop}FmBD/fmRM{fMat setmatrix}FmBD/FmRF{currentpoint 2 copy
translate 4 2 roll{-1 1 scale}if rotate neg exch neg exch translate}FmBD/fmax{2
copy lt{exch}if pop}FmBD/fmin{2 copy gt{exch}if pop}FmBD/fmkn{2 copy known{get
T}{pop pop false}ifelse}FmBD/fmfp{exch currentfont dup/FontMatrix get exch
/FontInfo fmkn{T}{currentfont/df fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix get
mtx concatmatrix exch T}{pop pop pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1
roll fmkn{exch 0 3 1 roll dtransform neg exch pop exch pop}{pop exec}ifelse}{
exec}ifelse}FmBD/fmdl{3 index 16 and 0 ne{gsave currentlinewidth 2. div dup
rmoveto currentpoint newpath moveto 2 index 0 rlineto stroke grestore}if 3
index 24 and 0 ne{gsave currentrgbcolor dup 4 1 roll eq 3 1 roll eq and{1
currentgray sub setgray}{1 setgray}ifelse 2 index 0 rlineto stroke grestore
gsave 2 index 0 rlineto strokepath .24 setlinewidth stroke grestore}{2 index 0
rlineto stroke 0 0 moveto}ifelse}FmBD/FmUl{gsave/fM2 fmXD currentpoint
/UnderlineThickness{fM2 15 div}fmfp abs dup setlinewidth/fM1 fmXD 4 index 1 and
0 ne{newpath 2 copy moveto 0/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto
fmdl}if 4 index 2 and 0 ne{newpath 2 copy moveto 0/XHeight{gsave newpath 0 0
moveto(x)F charpath flattenpath pathbbox 4 -1 roll pop pop pop grestore dup 0
eq{pop fM2 2. mul 3. div neg}if}fmfp 2. div rmoveto fmdl}if 4 index 4 and 0 ne{
newpath 2 copy moveto 0/CapHeight{gsave newpath 0 0 moveto(H)F charpath
flattenpath pathbbox 4 -1 roll pop pop pop grestore dup 0 eq{pop fM2 3. mul 4.
div neg}if}fmfp fM1 sub rmoveto fmdl}if pop pop pop pop pop grestore}FmBD/FmTx{
/fM3 fmXD/fM2 fmXD/fM1 fmXD 0 32 fM1 fM3 stringwidth pop fM2 sub fM3 length div
sub 0 fM3 awidthshow}FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3 def/fMK 4 def/fMS
5 def/fMNg 0 currenttransfer exec .5 gt def/fMCM fMN def/fMJK 0 def/fMJY 0 def
/fMJM 0 def/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1 def/fMPt null
def/fMCK[0 0 0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{/HalftoneType 2 def
currentcolorscreen[/GraySpotFunction/GrayAngle/GrayFrequency/BlueSpotFunction
/BlueAngle/BlueFrequency/GreenSpotFunction/GreenAngle/GreenFrequency
/RedSpotFunction/RedAngle/RedFrequency]{exch def}forall}{/HalftoneType 1 def
currentscreen[/SpotFunction/Angle/Frequency]{exch def}forall}ifelse statusdict
/checkscreen known{statusdict/accuratescreens get exec}{F}ifelse
/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{fML1{begin
statusdict/checkscreen known{currentdict/AccurateScreens known{AccurateScreens}
{F}ifelse statusdict/setaccuratescreens get exec}if HalftoneType 1 eq{Frequency
Angle currentdict/SpotFunction get setscreen}{HalftoneType 2 eq{fMCl{
RedFrequency RedAngle currentdict/RedSpotFunction get GreenFrequency GreenAngle
currentdict/GreenSpotFunction get BlueFrequency BlueAngle currentdict
/BlueSpotFunction get GrayFrequency GrayAngle currentdict/GraySpotFunction get
setcolorscreen}{GrayFrequency GrayAngle currentdict/GraySpotFunction get
setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD/FmCS{14 dict begin
/HalftoneType 2 def/AccurateScreens exch def/GraySpotFunction exch def
/GrayAngle exch def/GrayFrequency exch def/BlueSpotFunction exch def/BlueAngle
exch def/BlueFrequency exch def/GreenSpotFunction exch def/GreenAngle exch def
/GreenFrequency exch def/RedSpotFunction exch def/RedAngle exch def
/RedFrequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/FmSS{5 dict
begin/HalftoneType 1 def/AccurateScreens exch def/SpotFunction exch def/Angle
exch def/Frequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/fMPH
fmCH def/fmcp{/FmPr2 exch cvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length
FmPr2 length add array def FmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2
putinterval FmPrn cvx}FmBD/FrameColorEpsilon .001 def/eqepsilon{sub dup 0 lt{
neg}if FrameColorEpsilon le}FmBD/fmQC{2 copy 0 get exch 0 get eqepsilon{2 copy
1 get exch 1 get eqepsilon{2 copy 2 get exch 2 get eqepsilon{3 get exch 3 get
eqepsilon}{pop pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/fmQR{2
copy 4 get exch 0 get eqepsilon{2 copy 5 get exch 1 get eqepsilon{6 get exch 2
get eqepsilon}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/fmRY{1 exch sub 3 1 roll
1 exch sub 3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{pop}{exch pop}ifelse 2
copy le{pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1 roll 7 1 roll sub 6 1
roll sub 5 1 roll sub 4 1 roll}FmBD/FmSC{/fMCM fmXD/fMJB fmXD/fMJG fmXD/fMJR
fmXD/fMJK fmXD/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{/fMCM fmXD fmCC}
FmBD/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]/fMSC exch def end}
FmBD/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}forall dup T ne{pop F}if}
FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}forall dup T ne{pop F}if}
FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll eq{exch pop T exit}{pop}
ifelse}forall dup T ne{pop F}if}FmBD/RealSetgray/setgray load def
/RealSetrgbcolor/setrgbcolor load def/RealSethsbcolor/sethsbcolor load def/fMGM
T def/fMBM F def/setcustomcolor where{pop}{end/findcmykcustomcolor{0 0 0 4 -1
roll 8 array astore}bind def/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3
copy fmRY 8 4 roll 4 -1 roll 8 array astore end}bind def/setcustomcolor{
FrameMacDict begin dup type dup/integertype eq exch/realtype eq or not{1.0}if
/fMBM F def fMCM fMN eq{exch 0 4 getinterval aload pop 4{4 index mul 4 1 roll}
repeat RealSetcmykcolor pop}{exch dup{7 get}stopped{pop 4 get}if fmLM{exch pop
0 4 getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and
exch fMJC eq and{1 exch sub}{pop 1}ifelse}{5{pop}repeat 1}ifelse}{fMCM fMK eq{3
get}{fMCM fMY eq{2 get}{fMCM fMM eq{1 get}{fMCM fMC eq{0 get}{pop 0}ifelse}
ifelse}ifelse}ifelse mul 1 exch sub}ifelse RealSetgray}ifelse end}bind def
/setoverprint{FrameMacDict begin pop end}bind def FrameMacDict begin}ifelse
/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]setcolorspace fMCK 0
4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{fMCG RealSetgray}{fMCl
fMGM and{0 1 3{fMCK exch get 1 fMCG sub mul}for RealSetcmykcolor}{4 1 6{fMCK
exch get fMGM{1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{fMCG}{1}ifelse}
ifelse}for RealSetrgbcolor}ifelse}ifelse}ifelse}{fMBM{fMCG}{fMCK 0 4
getinterval aload fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and
exch fMJC eq and{fMCG}{1}ifelse}{pop pop pop pop 1}ifelse}{fMCM fMK eq{fMCG 1.0
exch sub mul 1.0 exch sub 4 1 roll pop pop pop}{fMCM fMY eq{pop fMCG 1.0 exch
sub mul 1.0 exch sub 3 1 roll pop pop}{fMCM fMM eq{pop pop fMCG 1.0 exch sub
mul 1.0 exch sub exch pop}{fMCM fMC eq{pop pop pop fMCG 1.0 exch sub mul 1.0
exch sub}{pop pop pop pop 1}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse fMGM fML1
or not{[/Pattern[/DeviceGray]]setcolorspace fMPt setcolor}{fMGM not fML1 and{
dup 1 lt{pop fMCG}if}if RealSetgray}ifelse}ifelse}FmBD userdict/setgray{
FrameMacDict begin fMCM fMN eq{RealSetgray}{fMCM fMK eq{RealSetgray}{fMCM fMS
eq fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{RealSetgray}{1 RealSetgray pop}
ifelse}ifelse}ifelse end}bind put userdict/setrgbcolor{FrameMacDict begin/fMBM
F def fMCM fMN eq{RealSetrgbcolor}{3 copy[4 1 roll]fmLR{fMCM fMS eq{fMJB eq
exch fMJG eq and exch fMJR eq and{0}{1}ifelse}{pop pop pop 1}ifelse}{fMCl{
RealSetrgbcolor currentcmykcolor}{fmRY}ifelse fMCM fMK eq{1.0 exch sub 4 1 roll
pop pop pop}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop}{fMCM fMM eq{pop pop
1.0 exch sub exch pop}{fMCM fMC eq{pop pop pop 1.0 exch sub}{pop pop pop pop 1}
ifelse}ifelse}ifelse}ifelse}ifelse RealSetgray}ifelse end}bind put userdict
/sethsbcolor{FrameMacDict begin fMCM fMN eq{RealSethsbcolor}{RealSethsbcolor
currentrgbcolor setrgbcolor}ifelse end}bind put/setcmykcolor where{pop
/RealSetcmykcolor/setcmykcolor load def}{/RealSetcmykcolor{4 1 roll 3{3 index
add 0 fmax 1 fmin 1 exch sub 3 1 roll}repeat setrgbcolor pop}FmBD}ifelse
/currentcmykcolor where{pop}{userdict/currentcmykcolor{FrameMacDict begin
currentrgbcolor fmRY end}bind put}ifelse userdict/setcmykcolor{FrameMacDict
begin/fMBM F def fMCM fMN eq{RealSetcmykcolor}{4 copy[5 1 roll]fmLC{fMCM fMS eq
{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq and{0}{1}ifelse}{pop
pop pop pop 1}ifelse}{fMCM fMK eq{1.0 exch sub 4 1 roll pop pop pop}{fMCM fMY
eq{pop 1.0 exch sub 3 1 roll pop pop}{fMCM fMM eq{pop pop 1.0 exch sub exch pop
}{fMCM fMC eq{pop pop pop 1.0 exch sub}{pop pop pop pop 1}ifelse}ifelse}ifelse}
ifelse}ifelse RealSetgray}ifelse end}bind put/fMFl[0 .1 .3 .5 .7 .9 .97 1<0f1e
3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><8142241818
244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7 dict dup
begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c1e>[135{
pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff0000ffff
0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}dup .75 2
sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<8040201008040201>
[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/patProcDict 5 dict dup begin<0f87
c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto stroke 4 -4 moveto 12 4
lineto stroke -4 4 moveto 4 12 lineto stroke}FmBD<0f1e3c78f0e1c387>{3
setlinewidth -1 9 moveto 9 -1 lineto stroke -4 4 moveto 4 -4 lineto stroke 4 12
moveto 12 4 lineto stroke}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9
-1 lineto stroke -1 -1 moveto 9 9 lineto stroke}FmBD<8040201008040201>{1
setlinewidth -1 -1 moveto 9 9 lineto stroke 4 -4 moveto 12 4 lineto stroke -4 4
moveto 4 12 lineto stroke}FmBD<0102040810204080>{1 setlinewidth -1 9 moveto 9
-1 lineto stroke -4 4 moveto 4 -4 lineto stroke 4 12 moveto 12 4 lineto stroke}
FmBD end def/patDict 15 dict dup begin/PatternType 1 def/PaintType 2 def
/TilingType 3 def/BBox[0 0 8 8]def/XStep 8 def/YStep 8 def/PaintProc{begin
patProcDict bstring known{patProcDict bstring get exec}{8 8 T[1 0 0 -1 0 8]
bstring imagemask}ifelse end}FmBD end def}ifelse/dpi 72 0 fMat defaultmatrix
dtransform dup mul exch dup mul add sqrt def/freq dpi dup 72 div round dup 0 eq
{pop 1}if 8 mul div def/sangle 1 0 fMat defaultmatrix dtransform exch atan def
sangle fMa2 rotate fMat fMa2 concatmatrix dup 0 get/sflipx exch def 3 get
/sflipy exch def fML1{/fmgF{fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPM
fML1{{dup patScreenDict exch known{patScreenDict exch get aload pop freq mul 5
2 roll fMa2 currentmatrix 1 get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgF
sflipy 2 fmgF mul}{sflipx 0 fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{
pop}ifelse fMNg{{neg}fmcp}if bind systemdict/setscreen get exec}{/bstring fmXD
/onbits 0 def/offbits 0 def freq 0 fMa2 currentmatrix 1 get 0 ne{90 add/pflipx
sflipx 1 fmgF def/pflipy sflipy 2 fmgF def}{/pflipx sflipx 0 fmgF def/pflipy
sflipy 3 fmgF neg def}ifelse{pflipy mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1
add 2 div 8 mul cvi def/yindex yy 1 add 2 div 8 mul cvi def bstring yindex
xindex 8 idiv add get 1 7 xindex 8 mod sub bitshift and 0 ne fMNg{not}if{
/onbits onbits 1 add def 1}{/offbits offbits 1 add def 0}ifelse}setscreen
offbits offbits onbits add div fMNg{1.0 exch sub}if}ifelse/fMCG exch def/fMGM F
def fmCC}}{/fMPC 8 dict def{dup fMPC exch known{fMPC exch get}{dup patDict
/bstring 3 -1 roll put patDict matrix makepattern dup fMPC 4 -1 roll 3 -1 roll
put}ifelse/fMCG 0 def/fMPt exch def/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{
/fMGM T def fML1{fMPH fmSH}if}if/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup
type/stringtype eq{fmPM}{fmgr}ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}
FmBD/FmFB{0 0 0 1 0 0 0 fMCK astore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx
matrix def fMOx currentmatrix pop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD
/FmIO{fmRM}FmBD/FmEO{FmOs restore}FmBD/fm321routines[{.3 mul add 1}bind{.59 mul
add 2}bind{.11 mul add round cvi fMs exch fMi exch put/fMi fMi 1 add def 0 0}
bind]def/fm321{/fMi 0 def 0 exch 0 exch{exch fm321routines exch get exec}forall
pop pop fMs}FmBD fML1{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{dup
length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD/fMGC fMGL 1 add array def
/setcolortransfer where{pop currentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD
/redt fmXD 0 1 fMGL{/fMIx fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx
get sub def/fMUY 1 fMBC fMIx get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU
fMk currentundercolorremoval exec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt
exec put fMNC fMIx 1 0 fMUM FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY
FmU sub fmax sub blut exec put fMGC fMIx 1 fMk currentblackgeneration exec sub
gryt exec put}for{fMGL mul cvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL
mul cvi fMBC exch get}{fMGL mul cvi fMGC exch get}setcolortransfer{pop 0}
setundercolorremoval{}setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup
fMRC exch get .3 mul exch dup fMNC exch get .59 mul exch fMBC exch get .11 mul
add add put}for{fMGL mul cvi fMGC exch get}currenttransfer fmcp settransfer}
ifelse}{dup length 1 sub/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}
currenttransfer fmcp settransfer}ifelse}{{{1 exch sub}currenttransfer fmcp
settransfer}if}ifelse/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate
rotate scale{-1 1 scale}if/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2
div fM3 2 div]{currentfile fM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{
fM18}{fM18}T 3 colorimage}{image}ifelse fM7 restore}FmBD}{/Fmi{save userdict
/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD
/fMRC fmXD[/Indexed/DeviceRGB fMGL{dup fMRC exch get exch dup fMNC exch get
exch fMBC exch get}]setcolorspace}{dup length 1 sub/fMGL fmXD/fMGC fmXD[
/Indexed/DeviceGray fMGL{fMGC exch get}]setcolorspace}ifelse}{1 4 index
bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray fMGL 5 -1 roll{{fMGL div 1 exch
sub}}{{fMGL div}}ifelse]setcolorspace}ifelse/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3
fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if/fM18 fM8 string def 7 dict
begin/ImageType 1 def/Width fM4 def/Height fM3 def/ImageMatrix[fM4 0 0 fM3 fM4
2 div fM3 2 div]def/DataSource{currentfile fM18 fM5{readstring}{readhexstring}
ifelse pop}def/BitsPerComponent fM6 def/Decode[0 fMGL]def currentdict end image
fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3 -1 roll put/fM5 fmXD/fM8 fmXD
/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def/fMs fM18 0 fM18 length 3 idiv
getinterval def translate rotate scale{-1 1 scale}if fM4 fM3 fM6[fM4 0 0 fM3
fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5{readstring}{readhexstring}ifelse
pop}F 3 colorimage}{{currentfile fM18 fM5{readstring}{readhexstring}ifelse pop
fm321}image}ifelse fM7 restore}FmBD fML1{/fmAn{transform round .5 sub exch
round .5 sub exch itransform}FmBD/fmAn1{transform round 1.5 sub exch round 1.5
sub exch itransform}FmBD/fmDn{dtransform round exch round exch idtransform}FmBD
/fmLn{0 dtransform exch cvi 2 idiv 2 mul .1 add exch idtransform pop}FmBD/FmCv{
fmDn 6 2 roll fmDn 6 2 roll fmDn 6 2 roll rcurveto}FmBD}{T setstrokeadjust/fmAn
{}FmBD/fmAn1{}FmBD/fmDn{}FmBD/fmLn{}FmBD/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn
moveto}FmBD/M{moveto}FmBD/N{0 rmoveto}FmBD/S{show}FmBD/A{0 exch ashow}FmBD/W{0
exch 32 exch widthshow}FmBD/X{0 exch 0 32 5 2 roll awidthshow}FmBD/fmQP{fML1
fMGM or not{gsave dup 1 RealSetgray exec grestore}if exec}FmBD/FmB{newpath fmAn
moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}FmBD/FmSo{fmLn setlinewidth
setlinecap{stroke}fmQP 0 0 moveto}FmBD/FmS{fmLn setlinewidth closepath{stroke}
fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth setlinecap{closepath}if setdash{
stroke}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{gsave{eofill}fmQP grestore}FmBD/fmq
{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch rlineto neg 0
rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{stroke}fmQP 0 0 moveto}FmBD
/FmqF{fmq gsave{fill}fmQP grestore}FmBD/FmKp{{currentpoint}stopped{F 5 1 roll}{
T 7 3 roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch
rlineto neg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{
currentpoint}stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{gsave
newpath fmAn translate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3
roll arc closepath{fill}fmQP grestore}FmBD/FmAP{gsave{setdash}if fmLn
setlinewidth setlinecap fmSM newpath 2 index 2 div add exch 3 index 2 div sub
exch fmAn 2 index 2 div sub exch 3 index 2 div add exch translate rotate scale
0.0 0.0 1.0 5 3 roll exch arcn{closepath}if fmRM{stroke}fmQP grestore}FmBD/FmST
{gsave fmAn translate .3 fmLn setlinewidth 0 setlinecap 0 setlinejoin newpath 1
RealSetgray 0 0 10 0 360 arc fill 0 RealSetgray 0 0 10 0 360 arc stroke 36{1 0
moveto 0 0 10 -2.5 2.5 arc fill 10 rotate}repeat grestore}FmBD/FmSL{gsave fmAn
translate .25 fmLn setlinewidth 0 setlinecap 0 setlinejoin newpath 1
RealSetgray 0 0 10 0 360 arc fill 0 RealSetgray 10 .5 fmLn neg .1{0 0 3 -1 roll
0 360 arc stroke}for grestore}FmBD/FrameEr where{pop}{userdict/FrameEr(\000)put
}ifelse/fMSJ 100 string def/fmXC{/$brkpage where{pop}{userdict/fMSuccessfull F
put currentfile cvx stopped pop fMSuccessfull not{systemdict/clear get exec
userdict/FrameEr get 0 1 put FrameMacDict begin gsave systemdict/initmatrix get
exec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}if
exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont
setfont FrameEr1 show( \()show $error begin errorname 20 string cvs show(, )
show/command load 128 string cvs show end(\))show FrameEr2 print flush
FrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}if
not{exit}if(EndFrame4Picture)eq{exit}if}loop grestore end}if fM7 type/savetype
eq{end fM7{{restore}stopped{end}{exit}ifelse}loop}if FrameMacDict begin}ifelse}
FmBD/FmEP{save userdict/fM7 3 -1 roll put{fMN FmSP}if[/ffl/fth/fh/fw/fcy/fcx
/ury/urx/lly/llx]{fmXD}forall fcx fcy translate fth rotate fw fh scale ffl{-1 1
scale}if 1 urx llx sub div 1 lly ury sub div scale urx llx add 2 div neg ury
lly add 2 div neg translate newpath llx lly moveto llx ury lineto urx ury
lineto urx lly lineto closepath clip newpath end/showpage{}def userdict begin
FrameMacDict/fmXC get exec}FmBD/FmPI{end FrameMacDict/fmXC get exec}FmBD/FmPc{
save userdict/fM7 3 -1 roll put end/showpage{}def newpath 3 index neg 3 index
neg translate 1 -1 scale 0.0 0.0 moveto userdict begin FrameMacDict/fmXC get
exec}FmBD/EndFrame4Picture where{pop}{userdict/EndFrame4Picture{/$brkpage where
{pop fM7 type/savetype eq{end fM7 restore}if FrameMacDict begin}{userdict
/fMSuccessfull true put stop}ifelse}bind put}ifelse/alphaimage where{pop}{
userdict/alphaimage{1 ne{limitcheck}if not{limitcheck}if pop image}bind put}
ifelse/fmDE{systemdict/initgraphics get exec clippath{pathbbox}stopped{100 100
512 692}if exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18
scalefont setfont currentpoint 2 copy FrameEr3 show 20 sub 2 copy moveto
FrameEr4 show 20 sub 2 copy moveto(\()show statusdict/jobname get show(\))show
20 sub moveto FrameEr5 show showpage}FmBD/cd where{dup/cd get/FmRealcd fmXD/cd{
FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if/FmRealcd load end exec}bind put}{
/endp where{dup/endp get/FmRealendp fmXD/endp{FrameMacDict/FmRealendp get exec
FrameEr 0 get 0 ne{FrameMacDict begin currentfile fMSJ{readline}stopped{pop
exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}bind put}if}ifelse systemdict
/setpacking known{fMSP setpacking}if end
%%EndProcSet
%%FRMSetup
FrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(dave; page: 1 of 2)setjob
%%EndPageSetup
gS 0 0 582 776 rC
1 G
-15 -8 612 792 rF
0 G
0 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
0 0 :M
f0_9 sf
( )S
2 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
43.608 223 M (1)S
12.997 N (INTRODUCTION)S
end
3 0 :M
f3_10 sf
( )S
5 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
43.608 240.667 M (T)S
-0.349 N 2.445(race-driven simulation is a widely-accepted technique)W
43.608 252.667 M -0.215(for studying the components of computer memory systems)W
43.608 264.667 M 0.651(such as caches and translation look-aside buf)W
-0.178 N 0.651(fers \(TLBs\).)W
43.608 276.667 M (However)S
-0.398 N 4.785(, trace-driven methods are time consuming,)W
43.608 288.667 M 0.093(requiring 20 to 50 times as long to run as actual hardware,)W
43.608 300.667 M 1.381(and often cannot accurately take process interaction and)W
43.608 312.667 M (operating system ef)S
-0.178 N (fects into account.)S
43.608 331.667 M (T)S
-0.698 N -0.23(o overcome the limitations of trace-driven simulation, we)W
43.608 343.667 M 0.347(have developed an alternative approach in which memory)W
43.608 355.667 M 0.878(simulators run in an active operating system kernel. )W
-0.178 N (This)S
43.608 367.667 M 1.925(method, called kernel-based memory simulation, allows)W
43.608 379.667 M 1.698(us to account for all system activity)W
-0.649 N 1.698(, including multiple)W
43.608 391.667 M 1.75(process and kernel interactions. Further)W
-0.398 N 1.75(, by using privi-)W
43.608 403.667 M 0.197(leged machine operations to cause traps into the simulator)W
43.608 415.667 M 0.112(only when a miss in a simulated memory structure occurs,)W
43.608 427.667 M 0.658(a kernel-based simulator is able to process hits at the full)W
43.608 439.667 M (speed of the underlying host hardware.)S
43.608 458.667 M 2.136(Our implementation of a kernel-based simulator)W
-0.398 N 2.136(, called)W
end
5 0 :M
f4_10 sf
( )S
7 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
43.608 470.667 M (T)S
-0.918 N (apeworm)S
end
8 0 :M
f3_10 sf
( )S
10 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
85.466 470.667 M (, uses a three-step algorithm:)S
48 490.667 M (\(1\))S
6.345 N 1.091(On a miss, trap to the kernel-resident simulator)W
-0.398 N (,)S
66 501.667 M 0.864(count the miss and clear the trap on the missing)W
66 512.667 M 1.431(memory location so that future misses can pro-)W
66 523.667 M (ceed uninterrupted.)S
48 542.667 M (\(2\))S
6.345 N 0.402(Invoke a replacement policy that selects an entry)W
66 553.667 M (to be displaced from a simulated )S
-0.178 N (TLB or cache.)S
48 572.667 M (\(3\))S
6.345 N 1.355(Set a trap on the displaced memory location so)W
66 583.667 M 0.245(that future references will miss and re-invoke the)W
66 594.667 M (simulator)S
-0.549 N (.)S
43.608 612.667 M -0.079(Several dif)W
-0.178 N -0.079(ferent techniques can be used to force traps into)W
43.608 624.667 M 1.205(the kernel after misses in a simulated memory structure.)W
43.608 636.667 M 4.782(For )W
-0.178 N 4.782(TLB simulation, where page-size granularity is)W
end
43 46 497 162 rC
10 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
7 FmP
43.32 46 495.719 162 FmqF
57 64 468 135 FmqF
end
10 0 :M
f0_18 sf
( )S
15 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
148.503 76 M (Kernel-based Memory Simulation)S
205.847 102 M (\(Extended )S
-0.664 N (Abstract\))S
end
15 0 :M
f3_10 sf
( )S
17 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
166.864 134.667 M (Richard Uhlig, David Nagle, )S
-0.178 N (T)S
-0.349 N (revor Mudge & Stuart Sechrest)S
169.39 158.667 M (Department of Electrical Engineering and Computer Science)S
244.07 170.667 M (University of Michigan)S
175.857 182.667 M (e-mail: uhlig@eecs.umich.edu, bassoon@eecs.umich.edu)S
end
gR
gS 0 0 582 776 rC
18 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
7 FmP
305.759 662.369 234 30.19 FmqF
end
18 0 :M
f3_8 sf
( )S
19 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
305.759 667.703 M 0.256(This work is supported by Defense )W
-0.439 N 0.256(Advanced Research Projects )W
-0.439 N (Agency)S
305.759 676.702 M 3.582(under DARP)W
-0.734 N 3.582(A/ARO Contract Number DAAL03-90-C-0028 and a)W
305.759 685.702 M (National Science Foundation Graduate Fellowship.)S
end
20 0 :M
f3_10 sf
( )S
22 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
305.759 222.226 M -0.106(needed, traps can be set or cleared using page valid bits, or)W
305.759 234.226 M 1.899(by installing and removing page-table entries in a soft-)W
305.759 246.226 M 3.585(ware-managed )W
-0.178 N 3.585(TLB [1]. For cache simulation, where)W
305.759 258.226 M 1.431(cache-line granularity is needed, instruction breakpoints,)W
305.759 270.226 M (data breakpoints, or memory parity traps can be set [2].)S
305.759 291.476 M (T)S
-0.698 N 0.694(wo essential features of this approach enable )W
-0.178 N (T)S
-0.698 N (apeworm)S
305.759 303.476 M 2.578(to overcome the limitations of trace-driven simulation.)W
305.759 315.476 M 2.449(First, because )W
-0.178 N (T)S
-0.698 N 2.449(apeworm processes only the infrequent)W
305.759 327.476 M 1.507(case of misses, it is much faster than comparable trace-)W
305.759 339.476 M 0.685(driven simulators, which consider all memory references.)W
305.759 351.476 M 0.37(Second, because )W
-0.178 N (T)S
-0.698 N 0.37(apeworm resides in the kernel of a run-)W
305.759 363.476 M 1.765(ning operating system, it is in an ideal position to take)W
305.759 375.476 M 1.083(multiple process interaction and operating system ef)W
-0.178 N (fects)S
305.759 387.476 M 0.105(into account. )W
-0.549 N (A)S
-0.549 N 0.105( disadvantage of kernel-based simulation is)W
305.759 399.476 M 0.65(that it is less \337)W
0.65(exible than traditional trace-driven simula-)W
305.759 411.476 M 0.195(tion with respect to the )W
-0.178 N 0.195(TLB and cache con\336)W
0.195(gurations that)W
305.759 423.476 M 1.823(it can simulate. Further)W
-0.398 N 1.823(, this method does not work for)W
305.759 435.476 M 0.188(other forms of architectural modeling, such as instruction-)W
305.759 447.476 M (pipeline simulation.)S
end
23 0 :M
f0_9 sf
( )S
25 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
305.759 471.059 M (2)S
12.997 N (EXPERIENCES)S
end
25 0 :M
f3_10 sf
( )S
27 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
305.759 490.976 M (W)S
-0.798 N 2.748(e have implemented )W
-0.178 N (T)S
-0.698 N 2.748(apeworm )W
-0.178 N 2.748(TLB and instruction)W
305.759 502.976 M 0.855(cache simulators to run on a DECstation 5000/200 under)W
305.759 514.976 M 3.612(Mach 3.0 with a user)W
-0.198 N 3.612(-level BSD UNIX server)W
-0.549 N 3.612(. )W
-0.178 N (This)S
305.759 526.976 M 5.684(extended abstract reports primarily )W
-0.178 N 5.684(TLB simulation)W
305.759 538.976 M 1.07(results. For a more detailed discussion of the design and)W
305.759 550.976 M (performance of the )S
-0.178 N (T)S
-0.698 N (apeworm I-cache simulator)S
-0.398 N (, see [4].)S
305.759 572.226 M 2.73(Figure 1 shows that typical slowdowns for )W
-0.178 N (T)S
-0.698 N (apeworm)S
305.759 584.226 M 0.204(TLB simulation are 0.25 to 1.25. Because miss ratios tend)W
305.759 596.226 M 0.514(to be higher for caches than for )W
-0.178 N 0.514(TLBs, )W
-0.178 N (T)S
-0.698 N 0.514(apeworm I-cache)W
305.759 608.226 M -0.208(simulations exhibit lar)W
-0.178 N -0.208(ger slowdowns, from close to 0 to as)W
305.759 620.226 M 2.167(high as 7. )W
-0.178 N 2.167(These results compare favorably with trace-)W
305.759 632.226 M 2.049(driven simulations where slowdowns are usually in the)W
305.759 644.226 M (range of 20 to 50.)S
7 FmP
43.32 640 234 72 FmqF
0 FmP
305.759 656.559 FmB
234 0 FmL
2 0.25 FmSo
end
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(dave; page: 2 of 2)setjob
%%EndPageSetup
gS 0 0 582 776 rC
1 G
-15 -8 612 792 rF
0 G
28 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
28 0 :M
f3_10 sf
( )S
30 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
43.32 340.667 M 0.304(Figure 2 illustrates the importance of including multi-pro-)W
43.32 352.667 M 0.53(cess and operating system references in )W
-0.178 N 0.53(TLB simulations.)W
43.32 364.667 M 0.082(For this workload \(an MPEG decoder\), the time is divided)W
43.32 376.667 M -0.18(between four address spaces, the MPEG process \(40%\), an)W
43.32 388.667 M 0.889(X display server \(5%\), the BSD UNIX server \(30%\) and)W
43.32 400.667 M 0.938(the kernel \(25%\), each of which compete for slots in the)W
43.32 412.667 M 0.589(TLB. In the plot, the lar)W
-0.178 N 0.589(ge dif)W
-0.178 N 0.589(ference between the )W
end
31 0 :M
f4_10 sf
( )S
33 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
248.997 412.667 M (Single-)S
43.32 424.667 M (Pr)S
-0.369 N (ocess)S
end
33 0 :M
f3_10 sf
( )S
35 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
74.604 424.667 M -0.093( data and the )W
end
36 0 :M
f4_10 sf
( )S
38 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
127.544 424.667 M (Complete)S
end
38 0 :M
f3_10 sf
( )S
40 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
165.867 424.667 M -0.093( data show that a simulation)W
43.32 436.667 M 1.492(methodology that only takes the MPEG process activity)W
43.32 448.667 M 2.25(into account would dramatically underestimate interfer)W
-0.198 N (-)S
43.32 460.667 M 1.506(ence between the four address spaces, and thus the true)W
43.32 472.666 M 3.705(impact of the )W
-0.178 N 3.705(TLB on overall memory performance.)W
43.32 484.666 M 0.853(Because it resides in the kernel and can \336)W
0.853(eld a trap from)W
43.32 496.666 M -0.094(any address space, including that of the kernel itself, )W
-0.178 N (T)S
-0.698 N (ape-)S
43.32 508.666 M 0.787(worm easily takes multiple process and kernel references)W
43.32 520.666 M (into account \(see the upper two lines of Figure 2\).)S
43.32 541 M -0.099(Although )W
-0.178 N (T)S
-0.698 N -0.099(apeworm can simulate )W
-0.178 N -0.099(TLB and cache con\336)W
(gu-)S
43.32 553 M 1.621(rations of varying sizes, associativities and line sizes, it)W
43.32 565 M 2.703(does suf)W
-0.178 N 2.703(fer some problems of \337)W
(exibility)S
-0.649 N 2.703(. In particular)W
-0.398 N (,)S
43.32 577 M 0.551(architectural structures which require accurate accounting)W
43.32 589 M 0.843(of time, such as write buf)W
-0.178 N 0.843(fers can not be simulated using)W
43.32 601 M (this approach.)S
end
41 0 :M
f0_9 sf
( )S
43 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
43.32 623.667 M (3)S
12.997 N (FUTURE WORK)S
end
43 0 :M
f3_10 sf
( )S
45 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
43.32 642.667 M (W)S
-0.798 N 0.338(e are extending this work in several ways. )W
-0.178 N (W)S
-0.798 N 0.338(e are using)W
43.32 654.667 M (T)S
-0.698 N 0.803(apeworm to study architectural support for next-genera-)W
43.32 666.667 M 0.924(tion operating system technology like Mach 3.0, in work)W
43.32 678.667 M 0.791(follows our previous studies in this area [1, 3]. )W
-0.549 N (Addition-)S
43.32 690.667 M (ally)S
-0.649 N 0.281(, we are working on ways to improve the kernel-based)W
305.759 340.667 M 1.158(simulation method itself. )W
-0.178 N (T)S
-0.698 N 1.158(o increase )W
-0.178 N (T)S
-0.698 N (apeworm\325)S
-0.549 N 1.158(s speed,)W
305.759 352.667 M 1.052(we are exploring set-sampling techniques and investigat-)W
305.759 364.667 M 2.385(ing architectural support to lower the cost of handling)W
305.759 376.667 M 0.631(misses. )W
-0.178 N (T)S
-0.698 N 0.631(o enhance \337)W
(exibility)S
-0.649 N 0.631(, we are looking at low-cost)W
305.759 388.667 M 0.445(ways to design hardware to better accommodate a kernel-)W
305.759 400.667 M 0.556(based simulator)W
-0.549 N 0.556(. Finally)W
-0.649 N 0.556(, we are studying the use of tradi-)W
305.759 412.667 M 1.237(tional statistical methods for isolating and characterizing)W
305.759 424.667 M (sources of variation between simulation results.)S
end
46 0 :M
f0_9 sf
( )S
48 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
305.759 448 M (4)S
12.997 N (REFERENCES)S
end
48 0 :M
f3_10 sf
( )S
50 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
305.759 465.667 M ([1])S
6.345 N 0.053(D. Nagle, R. Uhlig, )W
-0.178 N (T)S
-0.74 N 0.053(. Stanley)W
-0.649 N 0.053(, S. Sechrest, )W
-0.178 N (T)S
-0.74 N 0.053(. Mudge,)W
323.759 477.667 M 1.603(and R. Brown, \322Design tradeof)W
-0.178 N 1.603(fs for software-man-)W
323.759 489.667 M 1.153(aged )W
-0.178 N 1.153(TLBs,\323 in )W
end
51 0 :M
f4_10 sf
( )S
53 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
390.909 489.667 M 1.153(The 20th )W
-0.178 N 1.153(Annual International Sym-)W
323.759 501.667 M 4.771(posium on Computer )W
-0.178 N (Ar)S
-0.369 N (chitectur)S
-0.369 N 4.771(e,  )W
end
53 0 :M
f3_10 sf
( )S
55 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
490.555 501.667 M 4.771(San Diego,)W
323.759 513.667 M (California, IEEE, May 1993.)S
305.759 528.667 M ([2])S
6.345 N 0.889(S. Reinhardt, M. Hill, J. Larus, )W
-0.549 N 0.889(A. Lebeck, J. Lewis,)W
323.759 540.667 M 16141.5(and D. )W
-0.178 N (W)S
-0.798 N 16141.5(ood, \322The )W
-0.178 N (W)S
-0.398 N 16141.5(isconsin )W
-0.178 N (W)S
-0.398 N 16141.5(ind )W
-0.178 N (T)S
-0.349 N 16141.5(unnel: )W
-0.178 N (V)S
-0.598 N (irtual)S
323.759 552.667 M 0.433(Prototyping of Parallel Computers,\323 in )W
end
56 0 :M
f4_10 sf
( )S
58 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
483.111 552.667 M (SIGMETRICS)S
323.759 564.667 M -0.144(93 \(Special Issue of Performance Evaluation Review\),)W
end
58 0 :M
f3_10 sf
( )S
60 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
323.759 576.667 M (Santa Clara, CA, )S
-0.549 N (ACM, May 1993.)S
305.759 591.667 M ([3])S
6.345 N 0.004(D. Nagle, R. Uhlig, )W
-0.178 N (T)S
-0.74 N 0.004(. Mudge, and S. Sechrest, \322Opti-)W
323.759 603.667 M 0.548(mal )W
-0.549 N 0.548(Allocation of On-chip Memory for Multiple-API)W
323.759 615.667 M -0.241(Operating Systems,\323 in )W
end
61 0 :M
f4_10 sf
( )S
63 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
418.564 615.667 M -0.241(The 21st International Sympo-)W
323.759 627.667 M 1.392(sium on Computer )W
-0.178 N (Ar)S
-0.369 N (chitectur)S
-0.369 N 1.392(e,  )W
end
63 0 :M
f3_10 sf
( )S
65 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
463.66 627.667 M 1.392(Chicago, IL, )W
-0.549 N (April)S
323.759 639.667 M (1994.)S
305.759 654.667 M ([4])S
6.345 N -0.164(R. Uhlig, D. Nagle, )W
-0.178 N (T)S
-0.74 N -0.164(. Mudge, and S. Sechrest, \322T)W
-0.698 N (ape-)S
323.759 666.667 M 3.1(worm II: Ultra-Fast Memory System Simulation,\323)W
323.759 678.667 M 0.33(University of Michigan )W
-0.178 N (T)S
-0.698 N 0.33(echnical Report \(in prepara-)W
323.759 690.667 M (tion\).)S
end
43 46 235 270 rC
66 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
7 FmP
43.32 46 234 270 FmqF
end
66 0 :M
f5_12 sf
( )S
78 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
end
78 0 :M
f1_12 sf
( )S
81 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmFB
7 FmP
47.418 27.78 244.464 244.464 FmqF
0 FmP
72 407 345 680 169.65 150.012 244.464 244.464 0 F T FmEP
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: DeltaGraph 2.0
%%Title: Chart Window #4
%%Creation Date: 2/22/94 0:52 AM 
%%BoundingBox: 72 407 345 680
%%DocumentProcSets: DeltaGraph 2.0
%%DocumentSuppliedProcSets: DeltaGraph 2.0
%%DocumentFonts: DeltaSymbol
%%+Helvetica
%%EndComments
%%BeginProcSet: DeltaGraphPro
/DeltaGraphPro 150 dict def DeltaGraphPro begin
/currentpacking where{pop true setpacking}if
/Version 1.0 def
/Revision 2 def
/bdef{bind def}bind def
/ldef{load def}bdef
/xdef{exch def}bdef
systemdict/setcmykcolor known not{/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}bdef}if
/FillGray 0 def
/FillCyan 0 def
/FillMagenta 0 def
/FillYellow 0 def
/FillBlack 1 def
/FillMac 8 string def
/UseMacFill false def
/StrokeGray 0 def
/StrokeCyan 1 def
/StrokeMagenta 1 def
/StrokeYellow 1 def
/StrokeBlack 1 def
/StrokeMac 8 string def
/UseMacStroke false def
/cmyk{/FillBlack xdef /FillYellow xdef/FillMagenta xdef/FillCyan xdef}bdef
/CMYK{/StrokeBlack xdef /StrokeYellow xdef/StrokeMagenta xdef/StrokeCyan xdef}bdef
/apat 8 string def/mat matrix def
1 0 mat defaultmatrix dtransform exch atan/patang xdef
/sscrn{currentscreen/proc xdef/ang xdef/freq xdef}bdef
/rscrn{freq ang/proc load setscreen}bdef
/macpat{apat copy pop 9.375 patang{1 add 4 mul cvi apat exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}setscreen setgray}bdef
/d/setdash ldef
/g{false/UseMacFill xdef/FillGray xdef}bdef
/mg{true/UseMacFill xdef FillMac copy pop/FillGray xdef}bdef
/G{false/UseMacStroke xdef/StrokeGray xdef}bdef
/MG{true/UseMacStroke xdef StrokeMac copy pop/StrokeGray xdef}bdef
/_i currentflat def
/i{dup 0 eq{pop _i}if setflat}bdef
/j/setlinejoin ldef
/J/setlinecap ldef
/M/setmiterlimit ldef
/w/setlinewidth ldef
/_R{.25 sub round .25 add}bdef
/_r{transform _R exch _R exch itransform}bdef
/m{_r moveto}bdef
/L{_r lineto}bdef
/c{_r curveto}bdef
/_gf{1.0 FillGray sub mul}bdef
/_gs{1.0 StrokeGray sub mul}bdef
/sf{UseMacFill{FillCyan FillMagenta FillYellow FillBlack setcmykcolor sscrn FillGray FillMac macpat
}{FillGray setgray FillCyan _gf FillMagenta _gf FillYellow _gf FillBlack _gf setcmykcolor}ifelse}bdef
/ss{UseMacStroke{StrokeCyan StrokeMagenta StrokeYellow StrokeBlack setcmykcolor sscrn StrokeGray StrokeMac macpat
}{StrokeGray setgray StrokeCyan _gs StrokeMagenta _gs StrokeYellow _gs StrokeBlack _gs setcmykcolor}ifelse}bdef
/F{sf eofill UseMacFill{rscrn}if}bdef
/f{closepath F}bdef
/S{ss stroke UseMacStroke{rscrn}if}bdef
/s{closepath S}bdef
/B{gsave F grestore S}bdef
/b{closepath B}bdef
/N/newpath ldef
/n/N ldef
/sh{currentpoint 3 -1 roll show 3 -1 roll add moveto}bdef
/NewCodes 256 array def
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
NewCodes 0 32 getinterval astore pop
NewCodes 32/Times-Roman findfont/Encoding get
32 96 getinterval putinterval NewCodes dup 39/quotesingle put 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registeCyan/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcenteCyan/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
NewCodes 128 128 getinterval astore pop
/cd{dup maxlength dict/NF xdef{1 index/FID ne{NF 3 1 roll put}{pop pop}ifelse}forall NF}bdef
/rc{dup cvn/NewName xdef (|______) anchorsearch{pop findfont cd dup/Encoding NewCodes put NewName exch definefont}if pop}bdef
/rfnt{dup FontDirectory exch known{pop}{rc}ifelse}bdef
/sfnt{findfont exch scalefont setfont}bdef
/mfnt{findfont exch makefont setfont}bdef
/oshow{/str2 xdef .1 w 0 1 str2 length 1 sub{str2 exch 1 getinterval false charpath currentpoint stroke m}for}bdef
/tx{/$1 xdef /$2 xdef /$3 xdef /$4 xdef
dup /$5 xdef
0 1 $4 length 1 sub{$4 exch 1 getinterval exch $2 moveto $3} for
$1 0 gt { $1 2 div w 0 $1 rmoveto $5 $2 $1 add lineto stroke } if}bdef
/showsym {moveto
gsave
/ch xdef
currentpoint initmatrix translate 0 0 moveto
currentfont /FontName get /Courier eq
ch exch charpath flattenpath pathbbox
/ury xdef /urx xdef /lly xdef /llx xdef
urx llx sub -2 div llx sub 
ury lly sub -2 div lly sub
grestore
rmoveto ch show} def
/ps2mac{1 -1 scale
neg 0 exch translate} bdef
/mac2ps{0 exch translate
1 -1 scale} bdef
/xpat{gsave
setcmykcolor eofill 
grestore
gsave
FillCyan FillMagenta FillYellow FillBlack setcmykcolor 
eoclip
/thepat xdef
/right xdef/bottom xdef/left xdef/top xdef
/sizev xdef /sizeh xdef
/shrink exch 72 div def
/howmanywide left right sub abs cvi sizeh idiv 1 add shrink mul cvi def
/howmanydown bottom top sub abs cvi sizev idiv 1 add shrink mul cvi def
left top translate
sizeh shrink div sizev shrink div scale
howmanydown {gsave
howmanywide {sizeh sizev true [sizeh 0 0 sizev 0 0] {thepat} imagemask
1 0 translate} repeat
grestore
0 1 translate} repeat
grestore} bdef
/drawrect{/$r xdef
/$b xdef
/$l xdef
/$t xdef
$l $t m $r $t L $r $b L $l $b L closepath} bdef
/drawdiamond{/$r xdef
/$b xdef
/$l xdef
/$t xdef
$l $r add 2 div $t m
$l $t $b add 2 div L
$l $r add 2 div $b L
$r $t $b add 2 div L closepath} bdef
/ellipse{newpath/savematrix matrix currentmatrix def
translate scale 0 0 1 5 -2 roll arc savematrix setmatrix}bdef
/drawcircle{/$r xdef
/$b xdef
/$l xdef
/$t xdef
0 360 $r $l sub 2 div $t $b sub 2 div $r $l add 2 div $b $t add 2 div ellipse} bdef
/dofill{gsave 1 setlinewidth eoclip
/$drawit xdef
/$steps xdef
/$cv xdef /$ch xdef
/$r xdef /$b xdef /$l xdef /$t xdef
/$tstep $t $cv sub $steps div def
/$bstep $b $cv sub $steps div def
/$lstep $l $ch sub $steps div def
/$rstep $r $ch sub $steps div def
dup /$black xdef exch sub $steps div /$blackStep xdef
dup /$yellow xdef exch sub $steps div /$yellowStep xdef
dup /$magenta xdef exch sub $steps div /$magentaStep xdef
dup /$cyan xdef exch sub $steps div /$cyanStep xdef
newpath
0 1 $steps{pop
$cyan $magenta $yellow $black setcmykcolor
$t $l $b $r $drawit eofill
/$t $t $tstep sub def /$l $l $lstep sub def /$b $b $bstep sub def /$r $r $rstep sub def
/$cyan $cyan $cyanStep sub def
/$magenta $magenta $magentaStep sub def
/$yellow $yellow $yellowStep sub def
/$black $black $blackStep sub def} for
grestore} bdef
/dolfill {gsave 1 setlinewidth eoclip
1 sub /$steps xdef
/$r xdef /$b xdef /$l xdef /$t xdef
/$type xdef
1 eq /$isdouble xdef
dup /$black xdef exch sub $steps div /$blackStep xdef
dup /$yellow xdef exch sub $steps div /$yellowStep xdef
dup /$magenta xdef exch sub $steps div /$magentaStep xdef
dup /$cyan xdef exch sub $steps div /$cyanStep xdef
$type 1 eq{/$fromx $l def /$fromy $t def /$tox $r def /$toy $t def
/$stepx 0 def /$stepy $t $b sub $steps div $isdouble { 2 div } if def
$stepx abs $stepy abs gt { $stepx } { $stepy } ifelse abs setlinewidth} if
$type 2 eq{/$fromx $l def /$fromy $t def /$tox $l def /$toy $b def
/$stepx $r $l sub $steps div $isdouble { 2 div } if def /$stepy 0 def
$stepx abs $stepy abs gt { $stepx } { $stepy } ifelse abs setlinewidth} if
$type 3 eq{/$fromx $l $r $l sub 2 div sub def
/$fromy $t $b add 2 div def
/$tox $r $l add 2 div def
/$toy $t $t $b sub 2 div add def
/$stepx $r $l sub $steps div $isdouble { 2 div } if def
/$stepy $t $b sub $steps div $isdouble { 2 div } if def
$stepx abs $stepy abs gt { $stepx } { $stepy } ifelse abs 2 mul setlinewidth} if
$type 4 eq{/$fromx $r $r $l sub 2 div add def
/$fromy $t $b add 2 div def
/$tox $r $l add 2 div def
/$toy $t $t $b sub 2 div add def
/$stepx $r $l sub $steps div neg $isdouble { 2 div } if def
/$stepy $t $b sub $steps div $isdouble { 2 div } if def
$stepx abs $stepy abs gt { $stepx } { $stepy } ifelse abs 2 mul setlinewidth} if
newpath
0 1 $steps{pop
$cyan $magenta $yellow $black setcmykcolor
$fromx $fromy moveto $tox $toy lineto stroke
/$fromx $fromx $stepx add def
/$fromy $fromy $stepy sub def
/$tox $tox $stepx add def
/$toy $toy $stepy sub def
/$cyan $cyan $cyanStep sub def
/$magenta $magenta $magentaStep sub def
/$yellow $yellow $yellowStep sub def
/$black $black $blackStep sub def} for
$isdouble{/$cyanStep $cyanStep neg def
/$magentaStep $magentaStep neg def
/$yellowStep $yellowStep neg def
/$blackStep $blackStep neg def
0 1 $steps 1 sub{pop
/$cyan $cyan $cyanStep sub def
/$magenta $magenta $magentaStep sub def
/$yellow $yellow $yellowStep sub def
/$black $black $blackStep sub def
$cyan $magenta $yellow $black setcmykcolor
$fromx $fromy moveto $tox $toy lineto stroke
/$fromx $fromx $stepx add def
/$fromy $fromy $stepy sub def
/$tox $tox $stepx add def
/$toy $toy $stepy sub def} for} if
grestore} bdef
/myarc {90 exch sub exch 90 exch sub arc} bdef
/arcfill {gsave 1 setlinewidth eoclip
exch dup /$startangle xdef
sub exch dup /$steps xdef
div /$stepsize xdef
/$hight xdef
/$width xdef
/$y xdef
/$x xdef
/$steps $steps 1 sub def
dup /$black xdef exch sub $steps div /$blackStep xdef
dup /$yellow xdef exch sub $steps div /$yellowStep xdef
dup /$magenta xdef exch sub $steps div /$magentaStep xdef
dup /$cyan xdef exch sub $steps div /$cyanStep xdef
$x $y translate
$hight $width gt
{ /$rad $width def 1 $hight $width div scale }
{ /$rad $hight def $width $hight div 1 scale }
ifelse
1 -1 scale
newpath
0 1 $steps{pop
$cyan $magenta $yellow $black setcmykcolor
0 0 moveto
0 0 $rad $startangle dup $stepsize add dup /$startangle xdef myarc
closepath eofill
/$cyan $cyan $cyanStep sub def
/$magenta $magenta $magentaStep sub def
/$yellow $yellow $yellowStep sub def
/$black $black $blackStep sub def} for
grestore} bdef
/currentpacking where{pop false setpacking}if
end
%%EndProcSet
%%BeginSetup
DeltaGraphPro begin 2 setmiterlimit n
1 -1 scale 0 -752 translate
%%EndSetup
% Rect
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
72 72 m
345.598 72 L
345.598 345.598 L
72 345.598 L
72 72 L
f
% Chart
% Rect
0.078 w
0 G
1 g
0 0 0 0 cmyk
0 0 0 1 CMYK
112.273 99.398 m
319.945 99.398 L
319.945 262.719 L
112.273 262.719 L
112.273 99.398 L
b
% Poly line
0.078 w
0 G
0 0 0 1 CMYK
112.273 262.719 m
319.945 262.719 L
S
112.273 230.055 m
319.945 230.055 L
S
112.273 197.391 m
319.945 197.391 L
S
112.273 164.727 m
319.945 164.727 L
S
112.273 132.062 m
319.945 132.062 L
S
112.273 99.398 m
319.945 99.398 L
S
% Poly line
0.078 w
0 G
0 0 0 1 CMYK
109.273 262.719 m
112.273 262.719 L
S
109.273 256.184 m
112.273 256.184 L
S
109.273 249.652 m
112.273 249.652 L
S
109.273 243.117 m
112.273 243.117 L
S
109.273 236.586 m
112.273 236.586 L
S
109.273 230.055 m
112.273 230.055 L
S
109.273 223.52 m
112.273 223.52 L
S
109.273 216.988 m
112.273 216.988 L
S
109.273 210.453 m
112.273 210.453 L
S
109.273 203.922 m
112.273 203.922 L
S
109.273 197.391 m
112.273 197.391 L
S
109.273 190.855 m
112.273 190.855 L
S
109.273 184.324 m
112.273 184.324 L
S
109.273 177.789 m
112.273 177.789 L
S
109.273 171.258 m
112.273 171.258 L
S
109.273 164.727 m
112.273 164.727 L
S
109.273 158.191 m
112.273 158.191 L
S
109.273 151.66 m
112.273 151.66 L
S
109.273 145.125 m
112.273 145.125 L
S
109.273 138.594 m
112.273 138.594 L
S
109.273 132.062 m
112.273 132.062 L
S
109.273 125.527 m
112.273 125.527 L
S
109.273 118.996 m
112.273 118.996 L
S
109.273 112.461 m
112.273 112.461 L
S
109.273 105.93 m
112.273 105.93 L
S
109.273 99.398 m
112.273 99.398 L
S
% Poly line
0.078 w
0 G
0 0 0 1 CMYK
106.273 262.719 m
112.273 262.719 L
S
106.273 230.055 m
112.273 230.055 L
S
106.273 197.391 m
112.273 197.391 L
S
106.273 164.727 m
112.273 164.727 L
S
106.273 132.062 m
112.273 132.062 L
S
106.273 99.398 m
112.273 99.398 L
S
% Poly line
0.078 w
0 G
0 0 0 1 CMYK
112.273 268.719 m
112.273 262.719 L
S
133.039 268.719 m
133.039 262.719 L
S
153.805 268.719 m
153.805 262.719 L
S
174.574 268.719 m
174.574 262.719 L
S
195.34 268.719 m
195.34 262.719 L
S
216.109 268.719 m
216.109 262.719 L
S
236.875 268.719 m
236.875 262.719 L
S
257.641 268.719 m
257.641 262.719 L
S
278.41 268.719 m
278.41 262.719 L
S
299.176 268.719 m
299.176 262.719 L
S
319.945 268.719 m
319.945 262.719 L
S
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
117.465 201.309 m
127.848 201.309 L
127.848 262.719 L
117.465 262.719 L
117.465 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
117.465 113.77 m
127.848 113.77 L
127.848 201.309 L
117.465 201.309 L
117.465 113.77 L
150 16 16 113.77 117.465 201.309 127.848 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
117.465 113.77 m
127.848 113.77 L
127.848 113.77 L
117.465 113.77 L
117.465 113.77 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
117.465 113.77 m
127.848 113.77 L
127.848 113.77 L
117.465 113.77 L
117.465 113.77 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
138.23 201.309 m
148.613 201.309 L
148.613 262.719 L
138.23 262.719 L
138.23 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
138.23 166.031 m
148.613 166.031 L
148.613 201.309 L
138.23 201.309 L
138.23 166.031 L
150 16 16 166.031 138.23 201.309 148.613 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
138.23 166.031 m
148.613 166.031 L
148.613 166.031 L
138.23 166.031 L
138.23 166.031 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
138.23 166.031 m
148.613 166.031 L
148.613 166.031 L
138.23 166.031 L
138.23 166.031 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
158.996 201.309 m
169.383 201.309 L
169.383 262.719 L
158.996 262.719 L
158.996 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
158.996 180.402 m
169.383 180.402 L
169.383 201.309 L
158.996 201.309 L
158.996 180.402 L
150 16 16 180.402 158.996 201.309 169.383 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
158.996 180.402 m
169.383 180.402 L
169.383 180.402 L
158.996 180.402 L
158.996 180.402 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
158.996 180.402 m
169.383 180.402 L
169.383 180.402 L
158.996 180.402 L
158.996 180.402 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
179.766 201.309 m
190.148 201.309 L
190.148 262.719 L
179.766 262.719 L
179.766 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
179.766 186.938 m
190.148 186.938 L
190.148 201.309 L
179.766 201.309 L
179.766 186.938 L
150 16 16 186.938 179.766 201.309 190.148 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
179.766 186.938 m
190.148 186.938 L
190.148 186.938 L
179.766 186.938 L
179.766 186.938 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
179.766 186.938 m
190.148 186.938 L
190.148 186.938 L
179.766 186.938 L
179.766 186.938 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
200.531 201.309 m
210.914 201.309 L
210.914 262.719 L
200.531 262.719 L
200.531 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
200.531 186.938 m
210.914 186.938 L
210.914 201.309 L
200.531 201.309 L
200.531 186.938 L
150 16 16 186.938 200.531 201.309 210.914 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
200.531 162.113 m
210.914 162.113 L
210.914 186.938 L
200.531 186.938 L
200.531 162.113 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
200.531 147.738 m
210.914 147.738 L
210.914 162.113 L
200.531 162.113 L
200.531 147.738 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
221.301 201.309 m
231.684 201.309 L
231.684 262.719 L
221.301 262.719 L
221.301 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
221.301 186.938 m
231.684 186.938 L
231.684 201.309 L
221.301 201.309 L
221.301 186.938 L
150 16 16 186.938 221.301 201.309 231.684 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
221.301 162.113 m
231.684 162.113 L
231.684 186.938 L
221.301 186.938 L
221.301 162.113 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
221.301 153.617 m
231.684 153.617 L
231.684 162.113 L
221.301 162.113 L
221.301 153.617 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
242.066 201.309 m
252.449 201.309 L
252.449 262.719 L
242.066 262.719 L
242.066 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
242.066 186.938 m
252.449 186.938 L
252.449 201.309 L
242.066 201.309 L
242.066 186.938 L
150 16 16 186.938 242.066 201.309 252.449 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
242.066 162.113 m
252.449 162.113 L
252.449 186.938 L
242.066 186.938 L
242.066 162.113 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
242.066 158.191 m
252.449 158.191 L
252.449 162.113 L
242.066 162.113 L
242.066 158.191 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
262.832 201.309 m
273.219 201.309 L
273.219 262.719 L
262.832 262.719 L
262.832 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
262.832 186.938 m
273.219 186.938 L
273.219 201.309 L
262.832 201.309 L
262.832 186.938 L
150 16 16 186.938 262.832 201.309 273.219 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
262.832 162.113 m
273.219 162.113 L
273.219 186.938 L
262.832 186.938 L
262.832 162.113 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
262.832 160.152 m
273.219 160.152 L
273.219 162.113 L
262.832 162.113 L
262.832 160.152 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
283.602 201.309 m
293.984 201.309 L
293.984 262.719 L
283.602 262.719 L
283.602 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
283.602 186.938 m
293.984 186.938 L
293.984 201.309 L
283.602 201.309 L
283.602 186.938 L
150 16 16 186.938 283.602 201.309 293.984 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
283.602 162.113 m
293.984 162.113 L
293.984 186.938 L
283.602 186.938 L
283.602 162.113 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
283.602 162.113 m
293.984 162.113 L
293.984 162.113 L
283.602 162.113 L
283.602 162.113 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
304.367 201.309 m
314.75 201.309 L
314.75 262.719 L
304.367 262.719 L
304.367 201.309 L
b
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
304.367 186.938 m
314.75 186.938 L
314.75 201.309 L
304.367 201.309 L
304.367 186.938 L
150 16 16 186.938 304.367 201.309 314.75 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
304.367 160.805 m
314.75 160.805 L
314.75 186.938 L
304.367 186.938 L
304.367 160.805 L
b
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
304.367 160.805 m
314.75 160.805 L
314.75 160.805 L
304.367 160.805 L
304.367 160.805 L
b
% Line
0 G
0.078 w
0 0 0 1 CMYK
112.273 262.719 m
112.273 99.398 L
S
% Line
0 G
0.078 w
0 0 0 1 CMYK
112.273 262.719 m
319.945 262.719 L
S
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 117.156 270.719 ] concat
0.496 9  m (16) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 137.922 270.719 ] concat
0.496 9  m (32) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 158.691 270.719 ] concat
0.496 9  m (48) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 179.457 270.719 ] concat
0.496 9  m (64) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 200.223 270.719 ] concat
0.496 9  m (65) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 220.992 270.719 ] concat
0.496 9  m (80) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 241.758 270.719 ] concat
0.496 9  m (96) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 260.027 270.719 ] concat
0.496 9  m (128) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 280.793 270.719 ] concat
0.496 9  m (256) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 301.559 270.719 ] concat
0.496 9  m (512) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 98.273 257.219 ] concat
0.5 9  m (0) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 93.273 224.555 ] concat
0.496 9  m (50) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 88.273 191.891 ] concat
0.496 9  m (100) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 88.273 159.227 ] concat
0.496 9  m (150) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 88.273 126.562 ] concat
0.496 9  m (200) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 88.273 93.898 ] concat
0.496 9  m (250) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[0 -1 1 0 75.273 224.559 ] concat
0.004 9  m (Simulation Time \050sec\051) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 140.973 283.719 ] concat
0.492 9  m (Simulated TLB Size \050number of slots\051) show
grestore
% Rect
0.078 w
0 G
1 g
0 0 0 0 cmyk
0 0 0 1 CMYK
161.348 102.195 m
316.348 102.195 L
316.348 144.195 L
161.348 144.195 L
161.348 102.195 L
b
% Rect
0.078 w
0 G
0 g
0 0 0 1 cmyk
0 0 0 1 CMYK
241.098 129.195 m
250.098 129.195 L
250.098 138.195 L
241.098 138.195 L
241.098 129.195 L
b
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 260.098 128.195 ] concat
0 9  m (Base Time) show
grestore
% Rect
0.078 w
0 G
0 0 0 1 cmyk
0 0 0 1 CMYK
241.098 108.195 m
250.098 108.195 L
250.098 117.195 L
241.098 117.195 L
241.098 108.195 L
150 16 16 108.195 241.098 117.195 250.098 
<0202040408081010 2020404080800101 0202040408081010 2020404080800101>
0 0 0 0 xpat
s
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 260.098 107.195 ] concat
0 9  m (Overhead) show
grestore
% Rect
0.078 w
0 G
0.5 g
0 0 0 1 cmyk
0 0 0 1 CMYK
173.598 129.195 m
182.598 129.195 L
182.598 138.195 L
173.598 138.195 L
173.598 129.195 L
b
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 192.598 128.195 ] concat
0 9  m (Search) show
grestore
% Rect
0.078 w
0 G
1 g
0 0 0 1 cmyk
0 0 0 1 CMYK
173.598 108.195 m
182.598 108.195 L
182.598 117.195 L
173.598 117.195 L
173.598 108.195 L
b
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 192.598 107.195 ] concat
0 9  m (Replace) show
grestore
%%Trailer
end
EndFrame4Picture
0 0 0 1 0 0 0 FmK
7 FmP
52.32 235 216 72 FmqF
end
81 0 :M
f0_8 sf
( )S
82 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
87.212 240.333 M (Figure 1:  T)S
-0.592 N (apeworm Simulation T)S
-0.143 N (imes)S
end
84 0 :M
f1_7 sf
( )S
85 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
52.32 255.667 M -0.127(This \336)W
0 N -0.127(gure shows typical )W
-0.125 N (T)S
-0.776 N -0.127(apeworm simulation times for dif)W
-0.125 N -0.127(ferent sizes)W
52.32 263.667 M 0.069(of )W
-0.125 N 0.069(TLBs. )W
end
86 0 :M
f2_7 sf
( )S
87 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
80.29 263.667 M 0.069(Base T)W
-0.062 N (ime)S
end
87 0 :M
f1_7 sf
( )S
88 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
113.684 263.667 M 0.069( is how long the workload would run without )W
-0.125 N (T)S
-0.776 N (ape-)S
52.32 271.667 M 0.928(worm in the kernel, while )W
end
89 0 :M
f2_7 sf
( )S
90 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
135.759 271.667 M (Overhead)S
end
91 0 :M
f1_7 sf
( )S
92 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
166.434 271.667 M 0.928( is the time added by the )W
-0.125 N (T)S
-0.776 N (ape-)S
52.32 279.667 M 0.686(worm code that intercepts )W
-0.125 N 0.686(TLB misses. )W
end
93 0 :M
f2_7 sf
( )S
94 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
178.598 279.667 M (Search)S
end
95 0 :M
f1_7 sf
( )S
96 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
200.73 279.667 M 0.686( and )W
end
97 0 :M
f2_7 sf
( )S
98 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
217.637 279.667 M (Replace)S
end
99 0 :M
f1_7 sf
( )S
100 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
243.262 279.667 M 0.686( are the)W
52.32 287.667 M 1.153(amount of time used by )W
-0.125 N (T)S
-0.776 N 1.153(apeworm to maintain a data structure for)W
52.32 295.667 M 0.469(simulated )W
-0.125 N 0.469(TLBs that are larger than that of the underlying host\325)W
-0.125 N 0.469(s )W
-0.125 N (TLB)S
52.32 303.667 M (\(64 slots in this case\).)S
end
gR
gS 305 46 235 270 rC
101 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
7 FmP
305.759 46 234 270 FmqF
end
101 0 :M
f5_12 sf
( )S
113 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
end
113 0 :M
f1_12 sf
( )S
116 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
end
116 0 :M
f5_12 sf
( )S
128 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmFB
7 FmP
309.13 46 230.629 180.003 FmqF
0 FmP
76 484 322 676 424.445 136.001 230.629 180.003 0 F T FmEP
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: DeltaGraph 2.0
%%Title: Chart Window #1
%%Creation Date: 2/22/94 1:12 PM 
%%BoundingBox: 76 484 322 676
%%DocumentProcSets: DeltaGraph 2.0
%%DocumentSuppliedProcSets: DeltaGraph 2.0
%%DocumentFonts: DeltaSymbol
%%+Helvetica
%%+DeltaSymbol
%%EndComments
%%BeginProcSet: DeltaGraphPro
/DeltaGraphPro 150 dict def DeltaGraphPro begin
/currentpacking where{pop true setpacking}if
/Version 1.0 def
/Revision 2 def
/bdef{bind def}bind def
/ldef{load def}bdef
/xdef{exch def}bdef
systemdict/setcmykcolor known not{/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}bdef}if
/FillGray 0 def
/FillCyan 0 def
/FillMagenta 0 def
/FillYellow 0 def
/FillBlack 1 def
/FillMac 8 string def
/UseMacFill false def
/StrokeGray 0 def
/StrokeCyan 1 def
/StrokeMagenta 1 def
/StrokeYellow 1 def
/StrokeBlack 1 def
/StrokeMac 8 string def
/UseMacStroke false def
/cmyk{/FillBlack xdef /FillYellow xdef/FillMagenta xdef/FillCyan xdef}bdef
/CMYK{/StrokeBlack xdef /StrokeYellow xdef/StrokeMagenta xdef/StrokeCyan xdef}bdef
/apat 8 string def/mat matrix def
1 0 mat defaultmatrix dtransform exch atan/patang xdef
/sscrn{currentscreen/proc xdef/ang xdef/freq xdef}bdef
/rscrn{freq ang/proc load setscreen}bdef
/macpat{apat copy pop 9.375 patang{1 add 4 mul cvi apat exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}setscreen setgray}bdef
/d/setdash ldef
/g{false/UseMacFill xdef/FillGray xdef}bdef
/mg{true/UseMacFill xdef FillMac copy pop/FillGray xdef}bdef
/G{false/UseMacStroke xdef/StrokeGray xdef}bdef
/MG{true/UseMacStroke xdef StrokeMac copy pop/StrokeGray xdef}bdef
/_i currentflat def
/i{dup 0 eq{pop _i}if setflat}bdef
/j/setlinejoin ldef
/J/setlinecap ldef
/M/setmiterlimit ldef
/w/setlinewidth ldef
/_R{.25 sub round .25 add}bdef
/_r{transform _R exch _R exch itransform}bdef
/m{_r moveto}bdef
/L{_r lineto}bdef
/c{_r curveto}bdef
/_gf{1.0 FillGray sub mul}bdef
/_gs{1.0 StrokeGray sub mul}bdef
/sf{UseMacFill{FillCyan FillMagenta FillYellow FillBlack setcmykcolor sscrn FillGray FillMac macpat
}{FillGray setgray FillCyan _gf FillMagenta _gf FillYellow _gf FillBlack _gf setcmykcolor}ifelse}bdef
/ss{UseMacStroke{StrokeCyan StrokeMagenta StrokeYellow StrokeBlack setcmykcolor sscrn StrokeGray StrokeMac macpat
}{StrokeGray setgray StrokeCyan _gs StrokeMagenta _gs StrokeYellow _gs StrokeBlack _gs setcmykcolor}ifelse}bdef
/F{sf eofill UseMacFill{rscrn}if}bdef
/f{closepath F}bdef
/S{ss stroke UseMacStroke{rscrn}if}bdef
/s{closepath S}bdef
/B{gsave F grestore S}bdef
/b{closepath B}bdef
/N/newpath ldef
/n/N ldef
/sh{currentpoint 3 -1 roll show 3 -1 roll add moveto}bdef
/NewCodes 256 array def
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
NewCodes 0 32 getinterval astore pop
NewCodes 32/Times-Roman findfont/Encoding get
32 96 getinterval putinterval NewCodes dup 39/quotesingle put 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registeCyan/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcenteCyan/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
NewCodes 128 128 getinterval astore pop
/cd{dup maxlength dict/NF xdef{1 index/FID ne{NF 3 1 roll put}{pop pop}ifelse}forall NF}bdef
/rc{dup cvn/NewName xdef (|______) anchorsearch{pop findfont cd dup/Encoding NewCodes put NewName exch definefont}if pop}bdef
/rfnt{dup FontDirectory exch known{pop}{rc}ifelse}bdef
/sfnt{findfont exch scalefont setfont}bdef
/mfnt{findfont exch makefont setfont}bdef
/oshow{/str2 xdef .1 w 0 1 str2 length 1 sub{str2 exch 1 getinterval false charpath currentpoint stroke m}for}bdef
/tx{/$1 xdef /$2 xdef /$3 xdef /$4 xdef
dup /$5 xdef
0 1 $4 length 1 sub{$4 exch 1 getinterval exch $2 moveto $3} for
$1 0 gt { $1 2 div w 0 $1 rmoveto $5 $2 $1 add lineto stroke } if}bdef
/showsym {moveto
gsave
/ch xdef
currentpoint initmatrix translate 0 0 moveto
currentfont /FontName get /Courier eq
ch exch charpath flattenpath pathbbox
/ury xdef /urx xdef /lly xdef /llx xdef
urx llx sub -2 div llx sub 
ury lly sub -2 div lly sub
grestore
rmoveto ch show} def
/ps2mac{1 -1 scale
neg 0 exch translate} bdef
/mac2ps{0 exch translate
1 -1 scale} bdef
/xpat{gsave
setcmykcolor eofill 
grestore
gsave
FillCyan FillMagenta FillYellow FillBlack setcmykcolor 
eoclip
/thepat xdef
/right xdef/bottom xdef/left xdef/top xdef
/sizev xdef /sizeh xdef
/shrink exch 72 div def
/howmanywide left right sub abs cvi sizeh idiv 1 add shrink mul cvi def
/howmanydown bottom top sub abs cvi sizev idiv 1 add shrink mul cvi def
left top translate
sizeh shrink div sizev shrink div scale
howmanydown {gsave
howmanywide {sizeh sizev true [sizeh 0 0 sizev 0 0] {thepat} imagemask
1 0 translate} repeat
grestore
0 1 translate} repeat
grestore} bdef
/drawrect{/$r xdef
/$b xdef
/$l xdef
/$t xdef
$l $t m $r $t L $r $b L $l $b L closepath} bdef
/drawdiamond{/$r xdef
/$b xdef
/$l xdef
/$t xdef
$l $r add 2 div $t m
$l $t $b add 2 div L
$l $r add 2 div $b L
$r $t $b add 2 div L closepath} bdef
/ellipse{newpath/savematrix matrix currentmatrix def
translate scale 0 0 1 5 -2 roll arc savematrix setmatrix}bdef
/drawcircle{/$r xdef
/$b xdef
/$l xdef
/$t xdef
0 360 $r $l sub 2 div $t $b sub 2 div $r $l add 2 div $b $t add 2 div ellipse} bdef
/dofill{gsave 1 setlinewidth eoclip
/$drawit xdef
/$steps xdef
/$cv xdef /$ch xdef
/$r xdef /$b xdef /$l xdef /$t xdef
/$tstep $t $cv sub $steps div def
/$bstep $b $cv sub $steps div def
/$lstep $l $ch sub $steps div def
/$rstep $r $ch sub $steps div def
dup /$black xdef exch sub $steps div /$blackStep xdef
dup /$yellow xdef exch sub $steps div /$yellowStep xdef
dup /$magenta xdef exch sub $steps div /$magentaStep xdef
dup /$cyan xdef exch sub $steps div /$cyanStep xdef
newpath
0 1 $steps{pop
$cyan $magenta $yellow $black setcmykcolor
$t $l $b $r $drawit eofill
/$t $t $tstep sub def /$l $l $lstep sub def /$b $b $bstep sub def /$r $r $rstep sub def
/$cyan $cyan $cyanStep sub def
/$magenta $magenta $magentaStep sub def
/$yellow $yellow $yellowStep sub def
/$black $black $blackStep sub def} for
grestore} bdef
/dolfill {gsave 1 setlinewidth eoclip
1 sub /$steps xdef
/$r xdef /$b xdef /$l xdef /$t xdef
/$type xdef
1 eq /$isdouble xdef
dup /$black xdef exch sub $steps div /$blackStep xdef
dup /$yellow xdef exch sub $steps div /$yellowStep xdef
dup /$magenta xdef exch sub $steps div /$magentaStep xdef
dup /$cyan xdef exch sub $steps div /$cyanStep xdef
$type 1 eq{/$fromx $l def /$fromy $t def /$tox $r def /$toy $t def
/$stepx 0 def /$stepy $t $b sub $steps div $isdouble { 2 div } if def
$stepx abs $stepy abs gt { $stepx } { $stepy } ifelse abs setlinewidth} if
$type 2 eq{/$fromx $l def /$fromy $t def /$tox $l def /$toy $b def
/$stepx $r $l sub $steps div $isdouble { 2 div } if def /$stepy 0 def
$stepx abs $stepy abs gt { $stepx } { $stepy } ifelse abs setlinewidth} if
$type 3 eq{/$fromx $l $r $l sub 2 div sub def
/$fromy $t $b add 2 div def
/$tox $r $l add 2 div def
/$toy $t $t $b sub 2 div add def
/$stepx $r $l sub $steps div $isdouble { 2 div } if def
/$stepy $t $b sub $steps div $isdouble { 2 div } if def
$stepx abs $stepy abs gt { $stepx } { $stepy } ifelse abs 2 mul setlinewidth} if
$type 4 eq{/$fromx $r $r $l sub 2 div add def
/$fromy $t $b add 2 div def
/$tox $r $l add 2 div def
/$toy $t $t $b sub 2 div add def
/$stepx $r $l sub $steps div neg $isdouble { 2 div } if def
/$stepy $t $b sub $steps div $isdouble { 2 div } if def
$stepx abs $stepy abs gt { $stepx } { $stepy } ifelse abs 2 mul setlinewidth} if
newpath
0 1 $steps{pop
$cyan $magenta $yellow $black setcmykcolor
$fromx $fromy moveto $tox $toy lineto stroke
/$fromx $fromx $stepx add def
/$fromy $fromy $stepy sub def
/$tox $tox $stepx add def
/$toy $toy $stepy sub def
/$cyan $cyan $cyanStep sub def
/$magenta $magenta $magentaStep sub def
/$yellow $yellow $yellowStep sub def
/$black $black $blackStep sub def} for
$isdouble{/$cyanStep $cyanStep neg def
/$magentaStep $magentaStep neg def
/$yellowStep $yellowStep neg def
/$blackStep $blackStep neg def
0 1 $steps 1 sub{pop
/$cyan $cyan $cyanStep sub def
/$magenta $magenta $magentaStep sub def
/$yellow $yellow $yellowStep sub def
/$black $black $blackStep sub def
$cyan $magenta $yellow $black setcmykcolor
$fromx $fromy moveto $tox $toy lineto stroke
/$fromx $fromx $stepx add def
/$fromy $fromy $stepy sub def
/$tox $tox $stepx add def
/$toy $toy $stepy sub def} for} if
grestore} bdef
/myarc {90 exch sub exch 90 exch sub arc} bdef
/arcfill {gsave 1 setlinewidth eoclip
exch dup /$startangle xdef
sub exch dup /$steps xdef
div /$stepsize xdef
/$hight xdef
/$width xdef
/$y xdef
/$x xdef
/$steps $steps 1 sub def
dup /$black xdef exch sub $steps div /$blackStep xdef
dup /$yellow xdef exch sub $steps div /$yellowStep xdef
dup /$magenta xdef exch sub $steps div /$magentaStep xdef
dup /$cyan xdef exch sub $steps div /$cyanStep xdef
$x $y translate
$hight $width gt
{ /$rad $width def 1 $hight $width div scale }
{ /$rad $hight def $width $hight div 1 scale }
ifelse
1 -1 scale
newpath
0 1 $steps{pop
$cyan $magenta $yellow $black setcmykcolor
0 0 moveto
0 0 $rad $startangle dup $stepsize add dup /$startangle xdef myarc
closepath eofill
/$cyan $cyan $cyanStep sub def
/$magenta $magenta $magentaStep sub def
/$yellow $yellow $yellowStep sub def
/$black $black $blackStep sub def} for
grestore} bdef
/currentpacking where{pop false setpacking}if
end
%%EndProcSet
%%BeginSetup
DeltaGraphPro begin 2 setmiterlimit n
1 -1 scale 0 -752 translate
%%EndSetup
% Chart
% Rect
1 g
0 0 0 0 cmyk
0 0 0 1 CMYK
116.367 82.371 m
313.91 82.371 L
313.91 236.117 L
116.367 236.117 L
116.367 82.371 L
f
% Poly line
0.25 w
0 G
0 0 0 1 CMYK
113.367 236.117 m
116.367 236.117 L
S
113.367 228.43 m
116.367 228.43 L
S
113.367 220.742 m
116.367 220.742 L
S
113.367 213.055 m
116.367 213.055 L
S
113.367 205.367 m
116.367 205.367 L
S
113.367 197.68 m
116.367 197.68 L
S
113.367 189.992 m
116.367 189.992 L
S
113.367 182.305 m
116.367 182.305 L
S
113.367 174.617 m
116.367 174.617 L
S
113.367 166.93 m
116.367 166.93 L
S
113.367 159.242 m
116.367 159.242 L
S
113.367 151.555 m
116.367 151.555 L
S
113.367 143.867 m
116.367 143.867 L
S
113.367 136.18 m
116.367 136.18 L
S
113.367 128.492 m
116.367 128.492 L
S
113.367 120.805 m
116.367 120.805 L
S
113.367 113.117 m
116.367 113.117 L
S
113.367 105.43 m
116.367 105.43 L
S
113.367 97.742 m
116.367 97.742 L
S
113.367 90.055 m
116.367 90.055 L
S
113.367 82.371 m
116.367 82.371 L
S
% Poly line
0.5 w
0 G
0 0 0 1 CMYK
110.367 236.117 m
116.367 236.117 L
S
110.367 220.742 m
116.367 220.742 L
S
110.367 205.367 m
116.367 205.367 L
S
110.367 189.992 m
116.367 189.992 L
S
110.367 174.617 m
116.367 174.617 L
S
110.367 159.242 m
116.367 159.242 L
S
110.367 143.867 m
116.367 143.867 L
S
110.367 128.492 m
116.367 128.492 L
S
110.367 113.117 m
116.367 113.117 L
S
110.367 97.742 m
116.367 97.742 L
S
110.367 82.371 m
116.367 82.371 L
S
% Poly line
0.5 w
0 G
0 0 0 1 CMYK
116.367 242.117 m
116.367 236.117 L
S
165.75 242.117 m
165.75 236.117 L
S
215.137 242.117 m
215.137 236.117 L
S
264.523 242.117 m
264.523 236.117 L
S
313.91 242.117 m
313.91 236.117 L
S
% Line
0 G
1 w
0 0 0 1 CMYK
116.367 236.117 m
116.367 82.371 L
S
% Line
0 G
1 w
0 0 0 1 CMYK
116.367 236.117 m
313.91 236.117 L
S
% Poly line
0.148 w
0 G
0 0 0 1 CMYK
116.367 233.039 m
165.75 234.578 L
215.137 235.348 L
264.523 235.348 L
313.91 235.348 L
S
% Poly line
0.148 w
0 G
0 0 0 1 CMYK
116.367 167.699 m
165.75 201.523 L
215.137 219.973 L
264.523 231.504 L
313.91 234.578 L
S
% Poly line
0.148 w
0 G
0 0 0 1 CMYK
116.367 96.207 m
165.75 133.105 L
215.137 161.547 L
264.523 182.305 L
313.91 187.684 L
S
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 116.367 233.039 ] concat
(\203) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 165.75 234.578 ] concat
(\203) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 215.137 235.348 ] concat
(\203) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 264.523 235.348 ] concat
(\203) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 313.91 235.348 ] concat
(\203) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 116.367 167.699 ] concat
(\204) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 165.75 201.523 ] concat
(\204) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 215.137 219.973 ] concat
(\204) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 264.523 231.504 ] concat
(\204) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 313.91 234.578 ] concat
(\204) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 116.367 96.207 ] concat
(\202) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 165.75 133.105 ] concat
(\202) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 215.137 161.547 ] concat
(\202) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 264.523 182.305 ] concat
(\202) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 313.91 187.684 ] concat
(\202) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 110.867 244.117 ] concat
0.496 9  m (32) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 160.25 244.117 ] concat
0.496 9  m (64) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 207.137 244.117 ] concat
0.496 9  m (128) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 256.523 244.117 ] concat
0.496 9  m (256) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 305.91 244.117 ] concat
0.496 9  m (512) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 94.367 230.617 ] concat
0.5 9  m (0%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 94.367 215.242 ] concat
0.5 9  m (2%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 94.367 199.867 ] concat
0.5 9  m (4%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 94.367 184.492 ] concat
0.5 9  m (6%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 94.367 169.117 ] concat
0.5 9  m (8%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 89.367 153.742 ] concat
0.496 9  m (10%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 89.367 138.367 ] concat
0.496 9  m (12%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 89.367 122.992 ] concat
0.496 9  m (14%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 89.367 107.617 ] concat
0.496 9  m (16%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 89.367 92.242 ] concat
0.496 9  m (18%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 89.367 76.871 ] concat
0.496 9  m (20%) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[0 -1 1 0 76.367 213.242 ] concat
0.5 9  m (Percent \050%\051 of Stall Cycles) show
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 162.887 257.117 ] concat
0.246 9  m (TLB Size \050number of slots\051) show
grestore
% Rect
1 g
0 0 0 0 cmyk
0 0 0 1 CMYK
202.797 87.5 m
311.797 87.5 L
311.797 150.5 L
202.797 150.5 L
202.797 87.5 L
f
% Line
0 G
0.148 w
0 0 0 1 CMYK
212.797 98 m
230.797 98 L
S
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 221.797 98 ] concat
(\203) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 240.797 92.5 ] concat
0 9  m (Single-Process) show
grestore
% Line
0 G
0.148 w
0 0 0 1 CMYK
212.797 119 m
230.797 119 L
S
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 221.797 119 ] concat
(\204) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 240.797 113.5 ] concat
0 9  m (User-Only) show
grestore
% Line
0 G
0.148 w
0 0 0 1 CMYK
212.797 140 m
230.797 140 L
S
0 0 0 1 setcmykcolor
(|______DeltaSymbol) rfnt [9 0 0 -9 0 0] /|______DeltaSymbol mfnt
gsave
[1 0 0 1 221.797 140 ] concat
(\202) 0 0  showsym
grestore
0 0 0 1 setcmykcolor
(|______Helvetica) rfnt [9 0 0 -9 0 0] /|______Helvetica mfnt
gsave
[1 0 0 1 240.797 134.5 ] concat
0 9  m (Complete) show
grestore
%%Trailer
end
EndFrame4Picture
0 0 0 1 0 0 0 FmK
7 FmP
314.759 235 216 72 FmqF
end
128 0 :M
f0_8 sf
( )S
129 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
321.455 240.333 M (Figure 2: Effects of Multi-process and OS References)S
end
131 0 :M
f1_7 sf
( )S
132 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
314.759 255.667 M 1.617(This plot shows )W
-0.125 N 1.617(TLB performance \(given as a percentage of total)W
314.759 263.667 M 1.527(memory stall cycles\) for a workload that decompresses an MPEG)W
314.759 271.667 M 0.232(video. )W
-0.125 N 0.232(The dif)W
-0.125 N 0.232(ferent lines correspond to the amount of workload activ-)W
314.759 279.667 M 1.763(ity taken into account. )W
end
133 0 :M
f2_7 sf
( )S
134 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
391.315 279.667 M (Single-process)S
end
134 0 :M
f1_7 sf
( )S
135 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
437.514 279.667 M 1.763( means that only references)W
314.759 287.667 M 1.199(from the MPEG decoder process were considered, while )W
end
136 0 :M
f2_7 sf
( )S
137 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
500.998 287.667 M (User)S
-0.125 N (-only)S
end
138 0 :M
f1_7 sf
( )S
139 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
314.759 295.667 M 0.225(refers to all user processes \(include X display and UNIX servers\) and)W
end
140 0 :M
f2_7 sf
( )S
141 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
314.759 303.667 M (Complete)S
end
142 0 :M
f1_7 sf
( )S
143 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
344.651 303.667 M ( refers to all references, including those made by the kernel.)S
end
gR
gS 0 0 582 776 rC
144 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
53.04 319 FmB
216 0 FmL
2 0.25 FmSo
314.759 319 FmB
216 0 FmL
2 0.25 FmSo
end
endp
%%Trailer
end		% md
%%EOF
